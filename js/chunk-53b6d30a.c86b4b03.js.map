{"version":3,"sources":["webpack:///./src/views/login/components/LoginFooter.vue","webpack:///./src/views/login/components/LoginFooter.vue?cb59","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///./src/views/login/components/LoginFooter.vue?38de","webpack:///./src/hooks/useCountDown.js","webpack:///./src/utils/vee-valiationSchema.js","webpack:///./src/views/login/components/LoginHeader.vue","webpack:///./src/views/login/components/LoginHeader.vue?e128","webpack:///./src/views/login/components/LoginHeader.vue?f2e7","webpack:///./src/hooks/useLoginAfter.js","webpack:///./node_modules/vee-validate/dist/vee-validate.esm.js","webpack:///./src/api/user.js"],"names":["class","name","__exports__","render","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_objectWithoutProperties","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","useCountDown","count","ref","useIntervalFn","value","pause","immediate","resume","isActive","start","account","test","password","mobile","code","isAgree","checkUserAccount","checkUsernameIsUnique","result","valid","rePassword","form","to","useLoginAfter","router","useRouter","store","useStore","loginSuccess","data","commit","id","avatar","nickname","token","push","catch","Message","type","text","loginFail","isCallable","fn","isNullOrUndefined","undefined","isObject","obj","Array","isArray","isIndex","Number","toNumber","n","parseFloat","isNaN","RULES","resolveRule","FormContextKey","Symbol","FieldContextKey","IS_ABSENT","isLocator","__locatorRef","isHTMLTag","tag","includes","isFileInputNode","attrs","isYupValidator","validate","hasCheckedAttr","isContainerValue","isEmptyContainer","isNotNestedPath","path","isNativeMultiSelect","el","isNativeSelect","multiple","tagName","isNativeMultiSelectNode","hasTruthyBindingValue","shouldHaveValueBinding","isFormSubmitEvent","evt","isEvent","Event","srcElement","isPropPresent","prop","cleanupNonNestedPath","replace","getFromPath","object","fallback","resolvedValue","split","filter","Boolean","reduce","acc","propKey","setInPath","unset","splice","unsetPath","pathValues","map","_","idx","slice","join","keysOf","record","injectWithSelf","symbol","def","vm","provides","warn","message","resolveNextCheckboxValue","currentValue","checkedValue","uncheckedValue","newVal","throttle","func","limit","inThrottle","lastResult","args","context","this","setTimeout","apply","debounceAsync","inner","ms","timer","resolves","window","clearTimeout","forEach","r","Promise","resolve","normalizeChildren","slotProps","slots","default","_a","_b","getBoundValue","hasValueBinding","_value","normalizeEventValue","input","files","from","options","opt","selected","disabled","selectedOption","find","normalizeRules","rules","defineProperty","writable","enumerable","configurable","_$$isNormalized","prev","curr","params","normalizeParams","buildParams","rule","parsedRule","parseRule","provided","mapValueToLocator","createLocator","RegExp","locator","crossTable","val","extractLocators","DEFAULT_CONFIG","generateMessage","field","bails","validateOnBlur","validateOnChange","validateOnInput","validateOnModelUpdate","currentConfig","assign","getConfig","async","shouldBail","formData","values","_validate","errors","validateFieldWithYup","ctx","isValid","_generateFieldError","normalizedContext","rulesKeys","_test","error","validator","opts","abortEarly","then","err","Error","fillTargetValues","fieldCtx","normalize","param","validateYupSchema","schema","errorObjects","results","messages","validateObjectSchema","paths","validations","_c","fieldResult","names","bailsMap","isAllValid","validationResults","all","set","klona","get","x","k","list","tmp","str","toString","create","__proto__","Set","add","Map","Date","flags","constructor","buffer","getOwnPropertyDescriptor","getOwnPropertyNames","hasOwnProperty","es6","equal","a","b","size","entries","has","ArrayBuffer","isView","valueOf","ID_COUNTER","useFieldState","init","initialValue","setInitialValue","_useFieldValue","modelValue","standalone","errorMessage","setErrors","_useFieldErrors","meta","_useFieldMeta","MAX_SAFE_INTEGER","setState","state","touched","shouldInjectForm","modelRef","resolveInitialValue","initialValues","setFieldInitialValue","stageInitialValue","setFieldValue","pending","validated","dirty","flush","normalizeErrors","errorBag","setFieldErrorBag","API","sendInspectorState","INSPECTOR_ID","sendInspectorTree","useField","useCheckboxField","_useField","validateOnMount","label","validateOnValueUpdate","normalizeOptions","handleBlur","normalizedRules","rulesValue","extractRuleFromSchema","validateCurrentValue","mode","validateSchema","validateWithStateMutation","validateValidStateOnly","validate$1","handleChange","e","shouldValidate","newValue","setTouched","isTouched","unwatchValue","watchValue","deep","resetField","setValue","handleReset","oldValue","register","unregister","dependencies","rulesVal","deps","dep","depAcc","depName","depValue","oldDeps","defaults","valueProp","fieldName","patchCheckboxApi","checked","checkedVal","handleCheckboxChange","inheritAttrs","props","as","String","required","Function","modelModifiers","hasModelEvents","validateField","onChangeHandler","emit","handleInput","onInputHandler","fieldProps","resolveValidationTriggers","baseOnBlur","onBlur","baseOnInput","onInput","baseOnChange","onChange","resolveTag","newModelValue","applyModifiers","expose","reset","children","_d","modifiers","number","FORM_COUNTER","useForm","formId","RESET_LOCK","fieldsByPath","isSubmitting","submitCount","fieldArraysLookup","formValues","setErrorBag","useErrorBag","initialErrors","bag","getFirstFieldAtPath","fieldOrGroup","fieldExists","fieldNames","fieldBailsMap","originalInitialValues","setInitialValues","useFormInitialValues","useFormMeta","validationSchema","formCtx","registerField","unregisterField","setValues","setFieldError","setFieldTouched","resetForm","handleSubmit","unsetInitialValue","isFieldGroup","applyFieldMutation","mutation","fields","force","fieldInstance","clonedValue","f","insertFieldAtPath","rawField","fieldPath","fieldAtPath","removeFieldFromPath","findIndex","newPath","oldPath","initialErrorMessage","validation","every","onValidationError","preventDefault","stopPropagation","returnVal","_validateSchema","schemaValue","formResult","debouncedSchemaValidation","fieldsById","currentErrorsPaths","wasValidated","some","submitForm","submit","initialTouched","currentValues","MERGE_STRATEGIES","isDirty","calculateFlags","flat","flag","mergeMethod","providedValues","updateFields","wasTouched","normalizeErrorItem","onSubmit","onInvalidSubmit","handleFormReset","onReset","handleScopedSlotSubmit","onSuccess","formAttrs","novalidate","FIELD_ARRAY_COUNTER","useFieldArray","arrayPath","noOp","noOpApi","remove","swap","insert","update","prepend","entryCounter","initFields","createEntry","updateEntryFlags","fieldsLength","entry","isFirst","isLast","pathName","pathValue","normalizedPathValue","indexA","indexB","newFields","temp","tempEntry","arr","unshift","role","loginByAccount","requestWithoutToken","getMsgCodeByMobileLogin","loginByMobile","findAccountByOpenId","unionId","getMsgCodeWhenBindQQ","bindMobileAndQQ","getMsgCodeByRegister","registerAndBindQQ"],"mappings":"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","file":"js/chunk-53b6d30a.c86b4b03.js","sourcesContent":["<template>\n  <footer class=\"login-footer\">\n    <div class=\"container\">\n      <p>\n        <a href=\"javascript:\">关于我们</a>\n        <a href=\"javascript:\">帮助中心</a>\n        <a href=\"javascript:\">售后服务</a>\n        <a href=\"javascript:\">配送与验收</a>\n        <a href=\"javascript:\">商务合作</a>\n        <a href=\"javascript:\">搜索推荐</a>\n        <a href=\"javascript:\">友情链接</a>\n      </p>\n      <p>CopyRight &copy; 小兔鲜儿</p>\n    </div>\n  </footer>\n</template>\n\n<script>\nexport default {\n  name: \"LoginFooter\",\n};\n</script>\n\n<style scoped lang=\"less\">\n.login-footer {\n  padding: 30px 0 50px;\n  background: #fff;\n  p {\n    text-align: center;\n    color: #999;\n    padding-top: 20px;\n    a {\n      line-height: 1;\n      padding: 0 10px;\n      color: #999;\n      display: inline-block;\n      ~ a {\n        border-left: 1px solid #ccc;\n      }\n    }\n  }\n}\n</style>\n","import { render } from \"./LoginFooter.vue?vue&type=template&id=6ab420d7&scoped=true\"\nimport script from \"./LoginFooter.vue?vue&type=script&lang=js\"\nexport * from \"./LoginFooter.vue?vue&type=script&lang=js\"\n\nimport \"./LoginFooter.vue?vue&type=style&index=0&id=6ab420d7&scoped=true&lang=less\"\n\nimport exportComponent from \"/home/runner/work/Little-Rabbit-web/Little-Rabbit-web/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6ab420d7\"]])\n\nexport default __exports__","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../../node_modules/style-resources-loader/lib/index.js??ref--11-oneOf-1-4!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./LoginFooter.vue?vue&type=style&index=0&id=6ab420d7&scoped=true&lang=less\"","import { useIntervalFn } from \"@vueuse/core\";\nimport { ref } from \"vue\";\n\nexport default function useCountDown() {\n  // 此方法和原生JS中的setInterval的作用是一样的\n  // pause 清除定时器\n  // resume 重新开启定时器\n  // isActive 定时器是否正在执行\n  // 定时器不能立即执行, 在验证码发送成功以后才执行\n  // immediate: false 阻止定时器立即执行\n\n  const count = ref(0);\n\n  const { pause, resume, isActive } = useIntervalFn(\n    () => {\n      // 判断数值是否小于等于0\n      if (count.value <= 0) {\n        // 清除定时器\n        pause();\n      } else {\n        // 让count减一\n        count.value = count.value - 1;\n      }\n    },\n    1000,\n    {\n      immediate: false,\n    }\n  );\n  // 外部调用此方法用于开始倒计时\n  const start = (value) => {\n    // 如果没有正在倒计时\n    if (!isActive.value) {\n      // 重置 count\n      count.value = value;\n      // 开启倒计时\n      resume();\n    }\n  };\n  return { count, start, isActive };\n}\n","import { checkUsernameIsUnique } from \"@/api/user\";\n\nexport function account(value) {\n  if (!value) return \"请输入用户名\";\n  if (!/^[a-zA-Z]\\w{5,19}$/.test(value)) return \"字母开头且6-20个字符\";\n  return true;\n}\nexport function password(value) {\n  if (!value) return \"请输入密码\";\n  if (!/^\\w{6,24}$/.test(value)) return \"密码是6-24个字符\";\n  return true;\n}\nexport function mobile(value) {\n  if (!value) return \"请输入手机号\";\n  if (!/^1[3-9]\\d{9}$/.test(value)) return \"手机号格式错误\";\n  return true;\n}\nexport function code(value) {\n  if (!value) return \"请输入验证码\";\n  if (!/^\\d{6}$/.test(value)) return \"验证码是6个数字\";\n  return true;\n}\nexport function isAgree(value) {\n  if (!value) return \"请勾选同意用户协议\";\n  return true;\n}\n\nexport async function checkUserAccount(value) {\n  if (!value) return \"请输入用户名\";\n  if (!/^[a-zA-Z]\\w{5,19}$/.test(value)) return \"字母开头且6-20个字符\";\n  // 服务端校验\n  const { result } = await checkUsernameIsUnique(value);\n  if (result.valid) return \"用户名已存在\";\n  return true;\n}\nexport function rePassword(value, { form }) {\n  if (!value) return \"请输入密码\";\n  if (!/^\\w{6,24}$/.test(value)) return \"密码是6-24个字符\";\n  // 校验密码是否一致  form表单数据对象\n  if (value !== form.password) return \"两次输入的密码不一致\";\n  return true;\n}\n","<template>\n  <header class=\"login-header\">\n    <div class=\"container\">\n      <h1 class=\"logo\"><RouterLink to=\"/\">小兔鲜</RouterLink></h1>\n      <h3 class=\"sub\"><slot></slot></h3>\n      <RouterLink class=\"entry\" to=\"/\">\n        进入网站首页\n        <i class=\"iconfont icon-angle-right\"></i>\n        <i class=\"iconfont icon-angle-right\"></i>\n      </RouterLink>\n    </div>\n  </header>\n</template>\n\n<script>\nexport default {\n  name: \"LoginHeader\",\n};\n</script>\n\n<style scoped lang=\"less\">\n.login-header {\n  background: #fff;\n  border-bottom: 1px solid #e4e4e4;\n  .container {\n    display: flex;\n    align-items: flex-end;\n    justify-content: space-between;\n  }\n  .logo {\n    width: 200px;\n    a {\n      display: block;\n      height: 132px;\n      width: 100%;\n      text-indent: -9999px;\n      background: url(../../../assets/images/logo.png) no-repeat center 18px /\n        contain;\n    }\n  }\n  .sub {\n    flex: 1;\n    font-size: 24px;\n    font-weight: normal;\n    margin-bottom: 38px;\n    margin-left: 20px;\n    color: #666;\n  }\n  .entry {\n    width: 120px;\n    margin-bottom: 38px;\n    font-size: 16px;\n    i {\n      font-size: 14px;\n      color: @xtxColor;\n      letter-spacing: -5px;\n    }\n  }\n}\n</style>\n","import { render } from \"./LoginHeader.vue?vue&type=template&id=056cb944&scoped=true\"\nimport script from \"./LoginHeader.vue?vue&type=script&lang=js\"\nexport * from \"./LoginHeader.vue?vue&type=script&lang=js\"\n\nimport \"./LoginHeader.vue?vue&type=style&index=0&id=056cb944&scoped=true&lang=less\"\n\nimport exportComponent from \"/home/runner/work/Little-Rabbit-web/Little-Rabbit-web/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-056cb944\"]])\n\nexport default __exports__","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../../node_modules/style-resources-loader/lib/index.js??ref--11-oneOf-1-4!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./LoginHeader.vue?vue&type=style&index=0&id=056cb944&scoped=true&lang=less\"","import Message from \"@/components/library/Message\";\nimport { useRouter } from \"vue-router\";\nimport { useStore } from \"vuex\";\n\nexport default function useLoginAfter() {\n  // 获取路由对象\n  const router = useRouter();\n  // 获取store对象\n  const store = useStore();\n  // 登录成功之后要做的事情\n  const loginSuccess = (data) => {\n    // 1.存储用户信息\n    store.commit(\"user/setUser\", {\n      // 用户id\n      id: data.result.id,\n      // 用户头像\n      avatar: data.result.avatar,\n      // 用户昵称\n      nickname: data.result.nickname,\n      // 用户账号\n      account: data.result.account,\n      // 用户手机号\n      mobile: data.result.mobile,\n      // 用户登录凭证\n      token: data.result.token,\n    });\n    // 2.跳转到首页\n    router.push(\"/\").catch(() => {});\n    // 3. 登录成功的提示\n    Message({ type: \"success\", text: \"登录成功\" });\n  };\n  // 登录失败之后要做的事情\n  const loginFail = () => {\n    Message({ type: \"error\", text: \"登录失败\" });\n  };\n  return { loginSuccess, loginFail };\n}\n","/**\n  * vee-validate v4.5.7\n  * (c) 2021 Abdelrahman Awad\n  * @license MIT\n  */\nimport { inject, getCurrentInstance, warn as warn$1, ref, unref, computed, reactive, watch, onUnmounted, nextTick, onMounted, provide, isRef, onBeforeUnmount, defineComponent, toRef, resolveDynamicComponent, h, watchEffect, markRaw, readonly } from 'vue';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\nfunction isCallable(fn) {\r\n    return typeof fn === 'function';\r\n}\r\nfunction isNullOrUndefined(value) {\r\n    return value === null || value === undefined;\r\n}\r\nconst isObject = (obj) => obj !== null && !!obj && typeof obj === 'object' && !Array.isArray(obj);\r\nfunction isIndex(value) {\r\n    return Number(value) >= 0;\r\n}\r\nfunction toNumber(value) {\r\n    const n = parseFloat(value);\r\n    return isNaN(n) ? value : n;\r\n}\n\nconst RULES = {};\r\n/**\r\n * Adds a custom validator to the list of validation rules.\r\n */\r\nfunction defineRule(id, validator) {\r\n    // makes sure new rules are properly formatted.\r\n    guardExtend(id, validator);\r\n    RULES[id] = validator;\r\n}\r\n/**\r\n * Gets an already defined rule\r\n */\r\nfunction resolveRule(id) {\r\n    return RULES[id];\r\n}\r\n/**\r\n * Guards from extension violations.\r\n */\r\nfunction guardExtend(id, validator) {\r\n    if (isCallable(validator)) {\r\n        return;\r\n    }\r\n    throw new Error(`Extension Error: The validator '${id}' must be a function.`);\r\n}\n\nconst FormContextKey = Symbol('vee-validate-form');\r\nconst FieldContextKey = Symbol('vee-validate-field-instance');\r\nconst IS_ABSENT = Symbol('Default empty value');\n\nfunction isLocator(value) {\r\n    return isCallable(value) && !!value.__locatorRef;\r\n}\r\n/**\r\n * Checks if an tag name is a native HTML tag and not a Vue component\r\n */\r\nfunction isHTMLTag(tag) {\r\n    return ['input', 'textarea', 'select'].includes(tag);\r\n}\r\n/**\r\n * Checks if an input is of type file\r\n */\r\nfunction isFileInputNode(tag, attrs) {\r\n    return isHTMLTag(tag) && attrs.type === 'file';\r\n}\r\nfunction isYupValidator(value) {\r\n    return !!value && isCallable(value.validate);\r\n}\r\nfunction hasCheckedAttr(type) {\r\n    return type === 'checkbox' || type === 'radio';\r\n}\r\nfunction isContainerValue(value) {\r\n    return isObject(value) || Array.isArray(value);\r\n}\r\n/**\r\n * True if the value is an empty object or array\r\n */\r\nfunction isEmptyContainer(value) {\r\n    if (Array.isArray(value)) {\r\n        return value.length === 0;\r\n    }\r\n    return isObject(value) && Object.keys(value).length === 0;\r\n}\r\n/**\r\n * Checks if the path opted out of nested fields using `[fieldName]` syntax\r\n */\r\nfunction isNotNestedPath(path) {\r\n    return /^\\[.+\\]$/i.test(path);\r\n}\r\n/**\r\n * Checks if an element is a native HTML5 multi-select input element\r\n */\r\nfunction isNativeMultiSelect(el) {\r\n    return isNativeSelect(el) && el.multiple;\r\n}\r\n/**\r\n * Checks if an element is a native HTML5 select input element\r\n */\r\nfunction isNativeSelect(el) {\r\n    return el.tagName === 'SELECT';\r\n}\r\n/**\r\n * Checks if a tag name with attrs object will render a native multi-select element\r\n */\r\nfunction isNativeMultiSelectNode(tag, attrs) {\r\n    // The falsy value array is the values that Vue won't add the `multiple` prop if it has one of these values\r\n    const hasTruthyBindingValue = ![false, null, undefined, 0].includes(attrs.multiple) && !Number.isNaN(attrs.multiple);\r\n    return tag === 'select' && 'multiple' in attrs && hasTruthyBindingValue;\r\n}\r\n/**\r\n * Checks if a node should have a `:value` binding or not\r\n *\r\n * These nodes should not have a value binding\r\n * For files, because they are not reactive\r\n * For multi-selects because the value binding will reset the value\r\n */\r\nfunction shouldHaveValueBinding(tag, attrs) {\r\n    return isNativeMultiSelectNode(tag, attrs) || isFileInputNode(tag, attrs);\r\n}\r\nfunction isFormSubmitEvent(evt) {\r\n    return isEvent(evt) && evt.target && 'submit' in evt.target;\r\n}\r\nfunction isEvent(evt) {\r\n    if (!evt) {\r\n        return false;\r\n    }\r\n    if (typeof Event !== 'undefined' && isCallable(Event) && evt instanceof Event) {\r\n        return true;\r\n    }\r\n    // this is for IE and Cypress #3161\r\n    /* istanbul ignore next */\r\n    if (evt && evt.srcElement) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction isPropPresent(obj, prop) {\r\n    return prop in obj && obj[prop] !== IS_ABSENT;\r\n}\n\nfunction cleanupNonNestedPath(path) {\r\n    if (isNotNestedPath(path)) {\r\n        return path.replace(/\\[|\\]/gi, '');\r\n    }\r\n    return path;\r\n}\r\nfunction getFromPath(object, path, fallback) {\r\n    if (!object) {\r\n        return fallback;\r\n    }\r\n    if (isNotNestedPath(path)) {\r\n        return object[cleanupNonNestedPath(path)];\r\n    }\r\n    const resolvedValue = (path || '')\r\n        .split(/\\.|\\[(\\d+)\\]/)\r\n        .filter(Boolean)\r\n        .reduce((acc, propKey) => {\r\n        if (isContainerValue(acc) && propKey in acc) {\r\n            return acc[propKey];\r\n        }\r\n        return fallback;\r\n    }, object);\r\n    return resolvedValue;\r\n}\r\n/**\r\n * Sets a nested property value in a path, creates the path properties if it doesn't exist\r\n */\r\nfunction setInPath(object, path, value) {\r\n    if (isNotNestedPath(path)) {\r\n        object[cleanupNonNestedPath(path)] = value;\r\n        return;\r\n    }\r\n    const keys = path.split(/\\.|\\[(\\d+)\\]/).filter(Boolean);\r\n    let acc = object;\r\n    for (let i = 0; i < keys.length; i++) {\r\n        // Last key, set it\r\n        if (i === keys.length - 1) {\r\n            acc[keys[i]] = value;\r\n            return;\r\n        }\r\n        // Key does not exist, create a container for it\r\n        if (!(keys[i] in acc) || isNullOrUndefined(acc[keys[i]])) {\r\n            // container can be either an object or an array depending on the next key if it exists\r\n            acc[keys[i]] = isIndex(keys[i + 1]) ? [] : {};\r\n        }\r\n        acc = acc[keys[i]];\r\n    }\r\n}\r\nfunction unset(object, key) {\r\n    if (Array.isArray(object) && isIndex(key)) {\r\n        object.splice(Number(key), 1);\r\n        return;\r\n    }\r\n    if (isObject(object)) {\r\n        delete object[key];\r\n    }\r\n}\r\n/**\r\n * Removes a nested property from object\r\n */\r\nfunction unsetPath(object, path) {\r\n    if (isNotNestedPath(path)) {\r\n        delete object[cleanupNonNestedPath(path)];\r\n        return;\r\n    }\r\n    const keys = path.split(/\\.|\\[(\\d+)\\]/).filter(Boolean);\r\n    let acc = object;\r\n    for (let i = 0; i < keys.length; i++) {\r\n        // Last key, unset it\r\n        if (i === keys.length - 1) {\r\n            unset(acc, keys[i]);\r\n            break;\r\n        }\r\n        // Key does not exist, exit\r\n        if (!(keys[i] in acc) || isNullOrUndefined(acc[keys[i]])) {\r\n            break;\r\n        }\r\n        acc = acc[keys[i]];\r\n    }\r\n    const pathValues = keys.map((_, idx) => {\r\n        return getFromPath(object, keys.slice(0, idx).join('.'));\r\n    });\r\n    for (let i = pathValues.length - 1; i >= 0; i--) {\r\n        if (!isEmptyContainer(pathValues[i])) {\r\n            continue;\r\n        }\r\n        if (i === 0) {\r\n            unset(object, keys[0]);\r\n            continue;\r\n        }\r\n        unset(pathValues[i - 1], keys[i - 1]);\r\n    }\r\n}\r\n/**\r\n * A typed version of Object.keys\r\n */\r\nfunction keysOf(record) {\r\n    return Object.keys(record);\r\n}\r\n// Uses same component provide as its own injections\r\n// Due to changes in https://github.com/vuejs/vue-next/pull/2424\r\nfunction injectWithSelf(symbol, def = undefined) {\r\n    const vm = getCurrentInstance();\r\n    return (vm === null || vm === void 0 ? void 0 : vm.provides[symbol]) || inject(symbol, def);\r\n}\r\nfunction warn(message) {\r\n    warn$1(`[vee-validate]: ${message}`);\r\n}\r\n/**\r\n * Ensures we deal with a singular field value\r\n */\r\nfunction normalizeField(field) {\r\n    if (Array.isArray(field)) {\r\n        return field[0];\r\n    }\r\n    return field;\r\n}\r\nfunction resolveNextCheckboxValue(currentValue, checkedValue, uncheckedValue) {\r\n    if (Array.isArray(currentValue)) {\r\n        const newVal = [...currentValue];\r\n        const idx = newVal.indexOf(checkedValue);\r\n        idx >= 0 ? newVal.splice(idx, 1) : newVal.push(checkedValue);\r\n        return newVal;\r\n    }\r\n    return currentValue === checkedValue ? uncheckedValue : checkedValue;\r\n}\r\n/**\r\n * Creates a throttled function that only invokes the provided function (`func`) at most once per within a given number of milliseconds\r\n * (`limit`)\r\n */\r\nfunction throttle(func, limit) {\r\n    let inThrottle;\r\n    let lastResult;\r\n    return function (...args) {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const context = this;\r\n        if (!inThrottle) {\r\n            inThrottle = true;\r\n            setTimeout(() => (inThrottle = false), limit);\r\n            lastResult = func.apply(context, args);\r\n        }\r\n        return lastResult;\r\n    };\r\n}\r\nfunction debounceAsync(inner, ms = 0) {\r\n    let timer = null;\r\n    let resolves = [];\r\n    return function (...args) {\r\n        // Run the function after a certain amount of time\r\n        if (timer) {\r\n            window.clearTimeout(timer);\r\n        }\r\n        timer = window.setTimeout(() => {\r\n            // Get the result of the inner function, then apply it to the resolve function of\r\n            // each promise that has been created since the last time the inner function was run\r\n            const result = inner(...args);\r\n            resolves.forEach(r => r(result));\r\n            resolves = [];\r\n        }, ms);\r\n        return new Promise(resolve => resolves.push(resolve));\r\n    };\r\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst normalizeChildren = (tag, context, slotProps) => {\r\n    if (!context.slots.default) {\r\n        return context.slots.default;\r\n    }\r\n    if (typeof tag === 'string' || !tag) {\r\n        return context.slots.default(slotProps());\r\n    }\r\n    return {\r\n        default: () => { var _a, _b; return (_b = (_a = context.slots).default) === null || _b === void 0 ? void 0 : _b.call(_a, slotProps()); },\r\n    };\r\n};\r\n/**\r\n * Vue adds a `_value` prop at the moment on the input elements to store the REAL value on them, real values are different than the `value` attribute\r\n * as they do not get casted to strings unlike `el.value` which preserves user-code behavior\r\n */\r\nfunction getBoundValue(el) {\r\n    if (hasValueBinding(el)) {\r\n        return el._value;\r\n    }\r\n    return undefined;\r\n}\r\n/**\r\n * Vue adds a `_value` prop at the moment on the input elements to store the REAL value on them, real values are different than the `value` attribute\r\n * as they do not get casted to strings unlike `el.value` which preserves user-code behavior\r\n */\r\nfunction hasValueBinding(el) {\r\n    return '_value' in el;\r\n}\n\nfunction normalizeEventValue(value) {\r\n    if (!isEvent(value)) {\r\n        return value;\r\n    }\r\n    const input = value.target;\r\n    // Vue sets the current bound value on `_value` prop\r\n    // for checkboxes it it should fetch the value binding type as is (boolean instead of string)\r\n    if (hasCheckedAttr(input.type) && hasValueBinding(input)) {\r\n        return getBoundValue(input);\r\n    }\r\n    if (input.type === 'file' && input.files) {\r\n        return Array.from(input.files);\r\n    }\r\n    if (isNativeMultiSelect(input)) {\r\n        return Array.from(input.options)\r\n            .filter(opt => opt.selected && !opt.disabled)\r\n            .map(getBoundValue);\r\n    }\r\n    // makes sure we get the actual `option` bound value\r\n    // #3440\r\n    if (isNativeSelect(input)) {\r\n        const selectedOption = Array.from(input.options).find(opt => opt.selected);\r\n        return selectedOption ? getBoundValue(selectedOption) : input.value;\r\n    }\r\n    return input.value;\r\n}\n\n/**\r\n * Normalizes the given rules expression.\r\n */\r\nfunction normalizeRules(rules) {\r\n    const acc = {};\r\n    Object.defineProperty(acc, '_$$isNormalized', {\r\n        value: true,\r\n        writable: false,\r\n        enumerable: false,\r\n        configurable: false,\r\n    });\r\n    if (!rules) {\r\n        return acc;\r\n    }\r\n    // Object is already normalized, skip.\r\n    if (isObject(rules) && rules._$$isNormalized) {\r\n        return rules;\r\n    }\r\n    if (isObject(rules)) {\r\n        return Object.keys(rules).reduce((prev, curr) => {\r\n            const params = normalizeParams(rules[curr]);\r\n            if (rules[curr] !== false) {\r\n                prev[curr] = buildParams(params);\r\n            }\r\n            return prev;\r\n        }, acc);\r\n    }\r\n    /* istanbul ignore if */\r\n    if (typeof rules !== 'string') {\r\n        return acc;\r\n    }\r\n    return rules.split('|').reduce((prev, rule) => {\r\n        const parsedRule = parseRule(rule);\r\n        if (!parsedRule.name) {\r\n            return prev;\r\n        }\r\n        prev[parsedRule.name] = buildParams(parsedRule.params);\r\n        return prev;\r\n    }, acc);\r\n}\r\n/**\r\n * Normalizes a rule param.\r\n */\r\nfunction normalizeParams(params) {\r\n    if (params === true) {\r\n        return [];\r\n    }\r\n    if (Array.isArray(params)) {\r\n        return params;\r\n    }\r\n    if (isObject(params)) {\r\n        return params;\r\n    }\r\n    return [params];\r\n}\r\nfunction buildParams(provided) {\r\n    const mapValueToLocator = (value) => {\r\n        // A target param using interpolation\r\n        if (typeof value === 'string' && value[0] === '@') {\r\n            return createLocator(value.slice(1));\r\n        }\r\n        return value;\r\n    };\r\n    if (Array.isArray(provided)) {\r\n        return provided.map(mapValueToLocator);\r\n    }\r\n    // #3073\r\n    if (provided instanceof RegExp) {\r\n        return [provided];\r\n    }\r\n    return Object.keys(provided).reduce((prev, key) => {\r\n        prev[key] = mapValueToLocator(provided[key]);\r\n        return prev;\r\n    }, {});\r\n}\r\n/**\r\n * Parses a rule string expression.\r\n */\r\nconst parseRule = (rule) => {\r\n    let params = [];\r\n    const name = rule.split(':')[0];\r\n    if (rule.includes(':')) {\r\n        params = rule.split(':').slice(1).join(':').split(',');\r\n    }\r\n    return { name, params };\r\n};\r\nfunction createLocator(value) {\r\n    const locator = (crossTable) => {\r\n        const val = getFromPath(crossTable, value) || crossTable[value];\r\n        return val;\r\n    };\r\n    locator.__locatorRef = value;\r\n    return locator;\r\n}\r\nfunction extractLocators(params) {\r\n    if (Array.isArray(params)) {\r\n        return params.filter(isLocator);\r\n    }\r\n    return keysOf(params)\r\n        .filter(key => isLocator(params[key]))\r\n        .map(key => params[key]);\r\n}\n\nconst DEFAULT_CONFIG = {\r\n    generateMessage: ({ field }) => `${field} is not valid.`,\r\n    bails: true,\r\n    validateOnBlur: true,\r\n    validateOnChange: true,\r\n    validateOnInput: false,\r\n    validateOnModelUpdate: true,\r\n};\r\nlet currentConfig = Object.assign({}, DEFAULT_CONFIG);\r\nconst getConfig = () => currentConfig;\r\nconst setConfig = (newConf) => {\r\n    currentConfig = Object.assign(Object.assign({}, currentConfig), newConf);\r\n};\r\nconst configure = setConfig;\n\n/**\r\n * Validates a value against the rules.\r\n */\r\nasync function validate(value, rules, options = {}) {\r\n    const shouldBail = options === null || options === void 0 ? void 0 : options.bails;\r\n    const field = {\r\n        name: (options === null || options === void 0 ? void 0 : options.name) || '{field}',\r\n        rules,\r\n        bails: shouldBail !== null && shouldBail !== void 0 ? shouldBail : true,\r\n        formData: (options === null || options === void 0 ? void 0 : options.values) || {},\r\n    };\r\n    const result = await _validate(field, value);\r\n    const errors = result.errors;\r\n    return {\r\n        errors,\r\n        valid: !errors.length,\r\n    };\r\n}\r\n/**\r\n * Starts the validation process.\r\n */\r\nasync function _validate(field, value) {\r\n    if (isYupValidator(field.rules)) {\r\n        return validateFieldWithYup(value, field.rules, { bails: field.bails });\r\n    }\r\n    // if a generic function, use it as the pipeline.\r\n    if (isCallable(field.rules)) {\r\n        const ctx = {\r\n            field: field.name,\r\n            form: field.formData,\r\n            value: value,\r\n        };\r\n        const result = await field.rules(value, ctx);\r\n        const isValid = typeof result !== 'string' && result;\r\n        const message = typeof result === 'string' ? result : _generateFieldError(ctx);\r\n        return {\r\n            errors: !isValid ? [message] : [],\r\n        };\r\n    }\r\n    const normalizedContext = Object.assign(Object.assign({}, field), { rules: normalizeRules(field.rules) });\r\n    const errors = [];\r\n    const rulesKeys = Object.keys(normalizedContext.rules);\r\n    const length = rulesKeys.length;\r\n    for (let i = 0; i < length; i++) {\r\n        const rule = rulesKeys[i];\r\n        const result = await _test(normalizedContext, value, {\r\n            name: rule,\r\n            params: normalizedContext.rules[rule],\r\n        });\r\n        if (result.error) {\r\n            errors.push(result.error);\r\n            if (field.bails) {\r\n                return {\r\n                    errors,\r\n                };\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        errors,\r\n    };\r\n}\r\n/**\r\n * Handles yup validation\r\n */\r\nasync function validateFieldWithYup(value, validator, opts) {\r\n    var _a;\r\n    const errors = await validator\r\n        .validate(value, {\r\n        abortEarly: (_a = opts.bails) !== null && _a !== void 0 ? _a : true,\r\n    })\r\n        .then(() => [])\r\n        .catch((err) => {\r\n        // Yup errors have a name prop one them.\r\n        // https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\r\n        if (err.name === 'ValidationError') {\r\n            return err.errors;\r\n        }\r\n        // re-throw the error so we don't hide it\r\n        throw err;\r\n    });\r\n    return {\r\n        errors,\r\n    };\r\n}\r\n/**\r\n * Tests a single input value against a rule.\r\n */\r\nasync function _test(field, value, rule) {\r\n    const validator = resolveRule(rule.name);\r\n    if (!validator) {\r\n        throw new Error(`No such validator '${rule.name}' exists.`);\r\n    }\r\n    const params = fillTargetValues(rule.params, field.formData);\r\n    const ctx = {\r\n        field: field.name,\r\n        value,\r\n        form: field.formData,\r\n        rule: Object.assign(Object.assign({}, rule), { params }),\r\n    };\r\n    const result = await validator(value, params, ctx);\r\n    if (typeof result === 'string') {\r\n        return {\r\n            error: result,\r\n        };\r\n    }\r\n    return {\r\n        error: result ? undefined : _generateFieldError(ctx),\r\n    };\r\n}\r\n/**\r\n * Generates error messages.\r\n */\r\nfunction _generateFieldError(fieldCtx) {\r\n    const message = getConfig().generateMessage;\r\n    if (!message) {\r\n        return 'Field is invalid';\r\n    }\r\n    return message(fieldCtx);\r\n}\r\nfunction fillTargetValues(params, crossTable) {\r\n    const normalize = (value) => {\r\n        if (isLocator(value)) {\r\n            return value(crossTable);\r\n        }\r\n        return value;\r\n    };\r\n    if (Array.isArray(params)) {\r\n        return params.map(normalize);\r\n    }\r\n    return Object.keys(params).reduce((acc, param) => {\r\n        acc[param] = normalize(params[param]);\r\n        return acc;\r\n    }, {});\r\n}\r\nasync function validateYupSchema(schema, values) {\r\n    const errorObjects = await schema\r\n        .validate(values, { abortEarly: false })\r\n        .then(() => [])\r\n        .catch((err) => {\r\n        // Yup errors have a name prop one them.\r\n        // https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\r\n        if (err.name !== 'ValidationError') {\r\n            throw err;\r\n        }\r\n        // list of aggregated errors\r\n        return err.inner || [];\r\n    });\r\n    const results = {};\r\n    const errors = {};\r\n    for (const error of errorObjects) {\r\n        const messages = error.errors;\r\n        results[error.path] = { valid: !messages.length, errors: messages };\r\n        if (messages.length) {\r\n            errors[error.path] = messages[0];\r\n        }\r\n    }\r\n    return {\r\n        valid: !errorObjects.length,\r\n        results,\r\n        errors,\r\n    };\r\n}\r\nasync function validateObjectSchema(schema, values, opts) {\r\n    const paths = keysOf(schema);\r\n    const validations = paths.map(async (path) => {\r\n        var _a, _b, _c;\r\n        const fieldResult = await validate(getFromPath(values, path), schema[path], {\r\n            name: ((_a = opts === null || opts === void 0 ? void 0 : opts.names) === null || _a === void 0 ? void 0 : _a[path]) || path,\r\n            values: values,\r\n            bails: (_c = (_b = opts === null || opts === void 0 ? void 0 : opts.bailsMap) === null || _b === void 0 ? void 0 : _b[path]) !== null && _c !== void 0 ? _c : true,\r\n        });\r\n        return Object.assign(Object.assign({}, fieldResult), { path });\r\n    });\r\n    let isAllValid = true;\r\n    const validationResults = await Promise.all(validations);\r\n    const results = {};\r\n    const errors = {};\r\n    for (const result of validationResults) {\r\n        results[result.path] = {\r\n            valid: result.valid,\r\n            errors: result.errors,\r\n        };\r\n        if (!result.valid) {\r\n            isAllValid = false;\r\n            errors[result.path] = result.errors[0];\r\n        }\r\n    }\r\n    return {\r\n        valid: isAllValid,\r\n        results,\r\n        errors,\r\n    };\r\n}\n\nfunction set(obj, key, val) {\n\tif (typeof val.value === 'object') val.value = klona(val.value);\n\tif (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key === '__proto__') {\n\t\tObject.defineProperty(obj, key, val);\n\t} else obj[key] = val.value;\n}\n\nfunction klona(x) {\n\tif (typeof x !== 'object') return x;\n\n\tvar i=0, k, list, tmp, str=Object.prototype.toString.call(x);\n\n\tif (str === '[object Object]') {\n\t\ttmp = Object.create(x.__proto__ || null);\n\t} else if (str === '[object Array]') {\n\t\ttmp = Array(x.length);\n\t} else if (str === '[object Set]') {\n\t\ttmp = new Set;\n\t\tx.forEach(function (val) {\n\t\t\ttmp.add(klona(val));\n\t\t});\n\t} else if (str === '[object Map]') {\n\t\ttmp = new Map;\n\t\tx.forEach(function (val, key) {\n\t\t\ttmp.set(klona(key), klona(val));\n\t\t});\n\t} else if (str === '[object Date]') {\n\t\ttmp = new Date(+x);\n\t} else if (str === '[object RegExp]') {\n\t\ttmp = new RegExp(x.source, x.flags);\n\t} else if (str === '[object DataView]') {\n\t\ttmp = new x.constructor( klona(x.buffer) );\n\t} else if (str === '[object ArrayBuffer]') {\n\t\ttmp = x.slice(0);\n\t} else if (str.slice(-6) === 'Array]') {\n\t\t// ArrayBuffer.isView(x)\n\t\t// ~> `new` bcuz `Buffer.slice` => ref\n\t\ttmp = new x.constructor(x);\n\t}\n\n\tif (tmp) {\n\t\tfor (list=Object.getOwnPropertySymbols(x); i < list.length; i++) {\n\t\t\tset(tmp, list[i], Object.getOwnPropertyDescriptor(x, list[i]));\n\t\t}\n\n\t\tfor (i=0, list=Object.getOwnPropertyNames(x); i < list.length; i++) {\n\t\t\tif (Object.hasOwnProperty.call(tmp, k=list[i]) && tmp[k] === x[k]) continue;\n\t\t\tset(tmp, k, Object.getOwnPropertyDescriptor(x, k));\n\t\t}\n\t}\n\n\treturn tmp || x;\n}\n\nvar es6 = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n    if ((a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      for (i of a.entries())\n        if (!equal(i[1], b.get(i[0]))) return false;\n      return true;\n    }\n\n    if ((a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n\nlet ID_COUNTER = 0;\r\nfunction useFieldState(path, init) {\r\n    const { value, initialValue, setInitialValue } = _useFieldValue(path, init.modelValue, !init.standalone);\r\n    const { errorMessage, errors, setErrors } = _useFieldErrors(path, !init.standalone);\r\n    const meta = _useFieldMeta(value, initialValue, errors);\r\n    const id = ID_COUNTER >= Number.MAX_SAFE_INTEGER ? 0 : ++ID_COUNTER;\r\n    function setState(state) {\r\n        var _a;\r\n        if ('value' in state) {\r\n            value.value = state.value;\r\n        }\r\n        if ('errors' in state) {\r\n            setErrors(state.errors);\r\n        }\r\n        if ('touched' in state) {\r\n            meta.touched = (_a = state.touched) !== null && _a !== void 0 ? _a : meta.touched;\r\n        }\r\n        if ('initialValue' in state) {\r\n            setInitialValue(state.initialValue);\r\n        }\r\n    }\r\n    return {\r\n        id,\r\n        path,\r\n        value,\r\n        initialValue,\r\n        meta,\r\n        errors,\r\n        errorMessage,\r\n        setState,\r\n    };\r\n}\r\n/**\r\n * Creates the field value and resolves the initial value\r\n */\r\nfunction _useFieldValue(path, modelValue, shouldInjectForm) {\r\n    const form = shouldInjectForm ? injectWithSelf(FormContextKey, undefined) : undefined;\r\n    const modelRef = ref(unref(modelValue));\r\n    function resolveInitialValue() {\r\n        if (!form) {\r\n            return unref(modelRef);\r\n        }\r\n        return getFromPath(form.meta.value.initialValues, unref(path), unref(modelRef));\r\n    }\r\n    function setInitialValue(value) {\r\n        if (!form) {\r\n            modelRef.value = value;\r\n            return;\r\n        }\r\n        form.setFieldInitialValue(unref(path), value);\r\n    }\r\n    const initialValue = computed(resolveInitialValue);\r\n    // if no form is associated, use a regular ref.\r\n    if (!form) {\r\n        const value = ref(resolveInitialValue());\r\n        return {\r\n            value,\r\n            initialValue,\r\n            setInitialValue,\r\n        };\r\n    }\r\n    // to set the initial value, first check if there is a current value, if there is then use it.\r\n    // otherwise use the configured initial value if it exists.\r\n    // prioritize model value over form values\r\n    // #3429\r\n    const currentValue = modelValue ? unref(modelValue) : getFromPath(form.values, unref(path), unref(initialValue));\r\n    form.stageInitialValue(unref(path), currentValue);\r\n    // otherwise use a computed setter that triggers the `setFieldValue`\r\n    const value = computed({\r\n        get() {\r\n            return getFromPath(form.values, unref(path));\r\n        },\r\n        set(newVal) {\r\n            form.setFieldValue(unref(path), newVal);\r\n        },\r\n    });\r\n    return {\r\n        value,\r\n        initialValue,\r\n        setInitialValue,\r\n    };\r\n}\r\n/**\r\n * Creates meta flags state and some associated effects with them\r\n */\r\nfunction _useFieldMeta(currentValue, initialValue, errors) {\r\n    const meta = reactive({\r\n        touched: false,\r\n        pending: false,\r\n        valid: true,\r\n        validated: !!unref(errors).length,\r\n        initialValue: computed(() => unref(initialValue)),\r\n        dirty: computed(() => {\r\n            return !es6(unref(currentValue), unref(initialValue));\r\n        }),\r\n    });\r\n    watch(errors, value => {\r\n        meta.valid = !value.length;\r\n    }, {\r\n        immediate: true,\r\n        flush: 'sync',\r\n    });\r\n    return meta;\r\n}\r\n/**\r\n * Creates the error message state for the field state\r\n */\r\nfunction _useFieldErrors(path, shouldInjectForm) {\r\n    const form = shouldInjectForm ? injectWithSelf(FormContextKey, undefined) : undefined;\r\n    function normalizeErrors(messages) {\r\n        if (!messages) {\r\n            return [];\r\n        }\r\n        return Array.isArray(messages) ? messages : [messages];\r\n    }\r\n    if (!form) {\r\n        const errors = ref([]);\r\n        return {\r\n            errors,\r\n            errorMessage: computed(() => errors.value[0]),\r\n            setErrors: (messages) => {\r\n                errors.value = normalizeErrors(messages);\r\n            },\r\n        };\r\n    }\r\n    const errors = computed(() => form.errorBag.value[unref(path)] || []);\r\n    return {\r\n        errors,\r\n        errorMessage: computed(() => errors.value[0]),\r\n        setErrors: (messages) => {\r\n            form.setFieldErrorBag(unref(path), normalizeErrors(messages));\r\n        },\r\n    };\r\n}\n\nfunction installDevtoolsPlugin(app) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        setupDevtoolsPlugin({\r\n            id: 'vee-validate-devtools-plugin',\r\n            label: 'VeeValidate Plugin',\r\n            packageName: 'vee-validate',\r\n            homepage: 'https://vee-validate.logaretm.com/v4',\r\n            app,\r\n            logo: 'https://vee-validate.logaretm.com/v4/logo.png',\r\n        }, setupApiHooks);\r\n    }\r\n}\r\nconst DEVTOOLS_FORMS = {};\r\nconst DEVTOOLS_FIELDS = {};\r\nlet API;\r\nconst refreshInspector = throttle(() => {\r\n    setTimeout(async () => {\r\n        await nextTick();\r\n        API === null || API === void 0 ? void 0 : API.sendInspectorState(INSPECTOR_ID);\r\n        API === null || API === void 0 ? void 0 : API.sendInspectorTree(INSPECTOR_ID);\r\n    }, 100);\r\n}, 100);\r\nfunction registerFormWithDevTools(form) {\r\n    const vm = getCurrentInstance();\r\n    if (!API) {\r\n        const app = vm === null || vm === void 0 ? void 0 : vm.appContext.app;\r\n        if (!app) {\r\n            return;\r\n        }\r\n        installDevtoolsPlugin(app);\r\n    }\r\n    DEVTOOLS_FORMS[form.formId] = Object.assign({}, form);\r\n    DEVTOOLS_FORMS[form.formId]._vm = vm;\r\n    onUnmounted(() => {\r\n        delete DEVTOOLS_FORMS[form.formId];\r\n        refreshInspector();\r\n    });\r\n    refreshInspector();\r\n}\r\nfunction registerSingleFieldWithDevtools(field) {\r\n    const vm = getCurrentInstance();\r\n    if (!API) {\r\n        const app = vm === null || vm === void 0 ? void 0 : vm.appContext.app;\r\n        if (!app) {\r\n            return;\r\n        }\r\n        installDevtoolsPlugin(app);\r\n    }\r\n    DEVTOOLS_FIELDS[field.id] = Object.assign({}, field);\r\n    DEVTOOLS_FIELDS[field.id]._vm = vm;\r\n    onUnmounted(() => {\r\n        delete DEVTOOLS_FIELDS[field.id];\r\n        refreshInspector();\r\n    });\r\n    refreshInspector();\r\n}\r\nconst INSPECTOR_ID = 'vee-validate-inspector';\r\nconst COLORS = {\r\n    error: 0xbd4b4b,\r\n    success: 0x06d77b,\r\n    unknown: 0x54436b,\r\n    white: 0xffffff,\r\n    black: 0x000000,\r\n    blue: 0x035397,\r\n    purple: 0xb980f0,\r\n    orange: 0xf5a962,\r\n    gray: 0xbbbfca,\r\n};\r\nlet SELECTED_NODE = null;\r\nfunction setupApiHooks(api) {\r\n    API = api;\r\n    api.addInspector({\r\n        id: INSPECTOR_ID,\r\n        icon: 'rule',\r\n        label: 'vee-validate',\r\n        noSelectionText: 'Select a vee-validate node to inspect',\r\n        actions: [\r\n            {\r\n                icon: 'done_outline',\r\n                tooltip: 'Validate selected item',\r\n                action: async () => {\r\n                    if (!SELECTED_NODE) {\r\n                        console.error('There is not a valid selected vee-validate node or component');\r\n                        return;\r\n                    }\r\n                    const result = await SELECTED_NODE.validate();\r\n                    console.log(result);\r\n                },\r\n            },\r\n            {\r\n                icon: 'delete_sweep',\r\n                tooltip: 'Clear validation state of the selected item',\r\n                action: () => {\r\n                    if (!SELECTED_NODE) {\r\n                        console.error('There is not a valid selected vee-validate node or component');\r\n                        return;\r\n                    }\r\n                    if ('id' in SELECTED_NODE) {\r\n                        SELECTED_NODE.resetField();\r\n                        return;\r\n                    }\r\n                    SELECTED_NODE.resetForm();\r\n                },\r\n            },\r\n        ],\r\n    });\r\n    api.on.getInspectorTree(payload => {\r\n        if (payload.inspectorId !== INSPECTOR_ID) {\r\n            return;\r\n        }\r\n        const forms = Object.values(DEVTOOLS_FORMS);\r\n        const fields = Object.values(DEVTOOLS_FIELDS);\r\n        payload.rootNodes = [\r\n            ...forms.map(mapFormForDevtoolsInspector),\r\n            ...fields.map(field => mapFieldForDevtoolsInspector(field)),\r\n        ];\r\n    });\r\n    api.on.getInspectorState((payload, ctx) => {\r\n        if (payload.inspectorId !== INSPECTOR_ID || ctx.currentTab !== `custom-inspector:${INSPECTOR_ID}`) {\r\n            return;\r\n        }\r\n        const { form, field, type } = decodeNodeId(payload.nodeId);\r\n        if (form && type === 'form') {\r\n            payload.state = buildFormState(form);\r\n            SELECTED_NODE = form;\r\n            return;\r\n        }\r\n        if (field && type === 'field') {\r\n            payload.state = buildFieldState(field);\r\n            SELECTED_NODE = field;\r\n            return;\r\n        }\r\n        SELECTED_NODE = null;\r\n    });\r\n}\r\nfunction mapFormForDevtoolsInspector(form) {\r\n    const { textColor, bgColor } = getTagTheme(form);\r\n    const formTreeNodes = {};\r\n    Object.values(form.fieldsByPath.value).forEach(field => {\r\n        const fieldInstance = Array.isArray(field) ? field[0] : field;\r\n        if (!fieldInstance) {\r\n            return;\r\n        }\r\n        setInPath(formTreeNodes, unref(fieldInstance.name), mapFieldForDevtoolsInspector(fieldInstance, form));\r\n    });\r\n    function buildFormTree(tree, path = []) {\r\n        const key = [...path].pop();\r\n        if ('id' in tree) {\r\n            return Object.assign(Object.assign({}, tree), { label: key || tree.label });\r\n        }\r\n        if (isObject(tree)) {\r\n            return {\r\n                id: `${path.join('.')}`,\r\n                label: key || '',\r\n                children: Object.keys(tree).map(key => buildFormTree(tree[key], [...path, key])),\r\n            };\r\n        }\r\n        if (Array.isArray(tree)) {\r\n            return {\r\n                id: `${path.join('.')}`,\r\n                label: `${key}[]`,\r\n                children: tree.map((c, idx) => buildFormTree(c, [...path, String(idx)])),\r\n            };\r\n        }\r\n        return { id: '', label: '', children: [] };\r\n    }\r\n    const { children } = buildFormTree(formTreeNodes);\r\n    return {\r\n        id: encodeNodeId(form),\r\n        label: 'Form',\r\n        children,\r\n        tags: [\r\n            {\r\n                label: 'Form',\r\n                textColor,\r\n                backgroundColor: bgColor,\r\n            },\r\n            {\r\n                label: `${Object.keys(form.fieldsByPath.value).length} fields`,\r\n                textColor: COLORS.white,\r\n                backgroundColor: COLORS.unknown,\r\n            },\r\n        ],\r\n    };\r\n}\r\nfunction mapFieldForDevtoolsInspector(field, form) {\r\n    const fieldInstance = normalizeField(field);\r\n    const { textColor, bgColor } = getTagTheme(fieldInstance);\r\n    const isGroup = Array.isArray(field) && field.length > 1;\r\n    return {\r\n        id: encodeNodeId(form, fieldInstance, !isGroup),\r\n        label: unref(fieldInstance.name),\r\n        children: Array.isArray(field) ? field.map(fieldItem => mapFieldForDevtoolsInspector(fieldItem, form)) : undefined,\r\n        tags: [\r\n            isGroup\r\n                ? undefined\r\n                : {\r\n                    label: 'Field',\r\n                    textColor,\r\n                    backgroundColor: bgColor,\r\n                },\r\n            !form\r\n                ? {\r\n                    label: 'Standalone',\r\n                    textColor: COLORS.black,\r\n                    backgroundColor: COLORS.gray,\r\n                }\r\n                : undefined,\r\n            !isGroup && fieldInstance.type === 'checkbox'\r\n                ? {\r\n                    label: 'Checkbox',\r\n                    textColor: COLORS.white,\r\n                    backgroundColor: COLORS.blue,\r\n                }\r\n                : undefined,\r\n            !isGroup && fieldInstance.type === 'radio'\r\n                ? {\r\n                    label: 'Radio',\r\n                    textColor: COLORS.white,\r\n                    backgroundColor: COLORS.purple,\r\n                }\r\n                : undefined,\r\n            isGroup\r\n                ? {\r\n                    label: 'Group',\r\n                    textColor: COLORS.black,\r\n                    backgroundColor: COLORS.orange,\r\n                }\r\n                : undefined,\r\n        ].filter(Boolean),\r\n    };\r\n}\r\nfunction encodeNodeId(form, field, encodeIndex = true) {\r\n    const fieldPath = form ? unref(field === null || field === void 0 ? void 0 : field.name) : field === null || field === void 0 ? void 0 : field.id;\r\n    const fieldGroup = fieldPath ? form === null || form === void 0 ? void 0 : form.fieldsByPath.value[fieldPath] : undefined;\r\n    let idx;\r\n    if (encodeIndex && field && Array.isArray(fieldGroup)) {\r\n        idx = fieldGroup.indexOf(field);\r\n    }\r\n    const idObject = { f: form === null || form === void 0 ? void 0 : form.formId, ff: fieldPath, idx, type: field ? 'field' : 'form' };\r\n    return btoa(JSON.stringify(idObject));\r\n}\r\nfunction decodeNodeId(nodeId) {\r\n    try {\r\n        const idObject = JSON.parse(atob(nodeId));\r\n        const form = DEVTOOLS_FORMS[idObject.f];\r\n        if (!form && idObject.ff) {\r\n            const field = DEVTOOLS_FIELDS[idObject.ff];\r\n            if (!field) {\r\n                return {};\r\n            }\r\n            return {\r\n                type: idObject.type,\r\n                field,\r\n            };\r\n        }\r\n        if (!form) {\r\n            return {};\r\n        }\r\n        const fieldGroup = form.fieldsByPath.value[idObject.ff];\r\n        return {\r\n            type: idObject.type,\r\n            form,\r\n            field: Array.isArray(fieldGroup) ? fieldGroup[idObject.idx || 0] : fieldGroup,\r\n        };\r\n    }\r\n    catch (err) {\r\n        // console.error(`Devtools: [vee-validate] Failed to parse node id ${nodeId}`);\r\n    }\r\n    return {};\r\n}\r\nfunction buildFieldState(field) {\r\n    const { errors, meta, value } = field;\r\n    return {\r\n        'Field state': [\r\n            { key: 'errors', value: errors.value },\r\n            {\r\n                key: 'initialValue',\r\n                value: meta.initialValue,\r\n            },\r\n            {\r\n                key: 'currentValue',\r\n                value: value.value,\r\n            },\r\n            {\r\n                key: 'touched',\r\n                value: meta.touched,\r\n            },\r\n            {\r\n                key: 'dirty',\r\n                value: meta.dirty,\r\n            },\r\n            {\r\n                key: 'valid',\r\n                value: meta.valid,\r\n            },\r\n        ],\r\n    };\r\n}\r\nfunction buildFormState(form) {\r\n    const { errorBag, meta, values, isSubmitting, submitCount } = form;\r\n    return {\r\n        'Form state': [\r\n            {\r\n                key: 'submitCount',\r\n                value: submitCount.value,\r\n            },\r\n            {\r\n                key: 'isSubmitting',\r\n                value: isSubmitting.value,\r\n            },\r\n            {\r\n                key: 'touched',\r\n                value: meta.value.touched,\r\n            },\r\n            {\r\n                key: 'dirty',\r\n                value: meta.value.dirty,\r\n            },\r\n            {\r\n                key: 'valid',\r\n                value: meta.value.valid,\r\n            },\r\n            {\r\n                key: 'initialValues',\r\n                value: meta.value.initialValues,\r\n            },\r\n            {\r\n                key: 'currentValues',\r\n                value: values,\r\n            },\r\n            {\r\n                key: 'errors',\r\n                value: keysOf(errorBag.value).reduce((acc, key) => {\r\n                    var _a;\r\n                    const message = (_a = errorBag.value[key]) === null || _a === void 0 ? void 0 : _a[0];\r\n                    if (message) {\r\n                        acc[key] = message;\r\n                    }\r\n                    return acc;\r\n                }, {}),\r\n            },\r\n        ],\r\n    };\r\n}\r\n/**\r\n * Resolves the tag color based on the form state\r\n */\r\nfunction getTagTheme(fieldOrForm) {\r\n    // const fallbackColors = {\r\n    //   bgColor: COLORS.unknown,\r\n    //   textColor: COLORS.white,\r\n    // };\r\n    const isValid = 'id' in fieldOrForm ? fieldOrForm.meta.valid : fieldOrForm.meta.value.valid;\r\n    return {\r\n        bgColor: isValid ? COLORS.success : COLORS.error,\r\n        textColor: isValid ? COLORS.black : COLORS.white,\r\n    };\r\n}\n\n/**\r\n * Creates a field composite.\r\n */\r\nfunction useField(name, rules, opts) {\r\n    if (hasCheckedAttr(opts === null || opts === void 0 ? void 0 : opts.type)) {\r\n        return useCheckboxField(name, rules, opts);\r\n    }\r\n    return _useField(name, rules, opts);\r\n}\r\nfunction _useField(name, rules, opts) {\r\n    const { initialValue: modelValue, validateOnMount, bails, type, checkedValue, label, validateOnValueUpdate, uncheckedValue, standalone, } = normalizeOptions(unref(name), opts);\r\n    const form = !standalone ? injectWithSelf(FormContextKey) : undefined;\r\n    const { id, value, initialValue, meta, setState, errors, errorMessage } = useFieldState(name, {\r\n        modelValue,\r\n        standalone,\r\n    });\r\n    /**\r\n     * Handles common onBlur meta update\r\n     */\r\n    const handleBlur = () => {\r\n        meta.touched = true;\r\n    };\r\n    const normalizedRules = computed(() => {\r\n        let rulesValue = unref(rules);\r\n        const schema = unref(form === null || form === void 0 ? void 0 : form.schema);\r\n        if (schema && !isYupValidator(schema)) {\r\n            rulesValue = extractRuleFromSchema(schema, unref(name)) || rulesValue;\r\n        }\r\n        if (isYupValidator(rulesValue) || isCallable(rulesValue)) {\r\n            return rulesValue;\r\n        }\r\n        return normalizeRules(rulesValue);\r\n    });\r\n    async function validateCurrentValue(mode) {\r\n        var _a, _b;\r\n        if (form === null || form === void 0 ? void 0 : form.validateSchema) {\r\n            return (_a = (await form.validateSchema(mode)).results[unref(name)]) !== null && _a !== void 0 ? _a : { valid: true, errors: [] };\r\n        }\r\n        return validate(value.value, normalizedRules.value, {\r\n            name: unref(label) || unref(name),\r\n            values: (_b = form === null || form === void 0 ? void 0 : form.values) !== null && _b !== void 0 ? _b : {},\r\n            bails,\r\n        });\r\n    }\r\n    async function validateWithStateMutation() {\r\n        meta.pending = true;\r\n        meta.validated = true;\r\n        const result = await validateCurrentValue('validated-only');\r\n        setState({ errors: result.errors });\r\n        meta.pending = false;\r\n        return result;\r\n    }\r\n    async function validateValidStateOnly() {\r\n        const result = await validateCurrentValue('silent');\r\n        meta.valid = result.valid;\r\n        return result;\r\n    }\r\n    function validate$1(opts) {\r\n        if (!(opts === null || opts === void 0 ? void 0 : opts.mode) || (opts === null || opts === void 0 ? void 0 : opts.mode) === 'force') {\r\n            return validateWithStateMutation();\r\n        }\r\n        if ((opts === null || opts === void 0 ? void 0 : opts.mode) === 'validated-only') {\r\n            return validateWithStateMutation();\r\n        }\r\n        return validateValidStateOnly();\r\n    }\r\n    // Common input/change event handler\r\n    const handleChange = (e, shouldValidate = true) => {\r\n        const newValue = normalizeEventValue(e);\r\n        value.value = newValue;\r\n        if (!validateOnValueUpdate && shouldValidate) {\r\n            validateWithStateMutation();\r\n        }\r\n    };\r\n    // Runs the initial validation\r\n    onMounted(() => {\r\n        if (validateOnMount) {\r\n            return validateWithStateMutation();\r\n        }\r\n        // validate self initially if no form was handling this\r\n        // forms should have their own initial silent validation run to make things more efficient\r\n        if (!form || !form.validateSchema) {\r\n            validateValidStateOnly();\r\n        }\r\n    });\r\n    function setTouched(isTouched) {\r\n        meta.touched = isTouched;\r\n    }\r\n    let unwatchValue;\r\n    function watchValue() {\r\n        unwatchValue = watch(value, validateOnValueUpdate ? validateWithStateMutation : validateValidStateOnly, {\r\n            deep: true,\r\n        });\r\n    }\r\n    watchValue();\r\n    function resetField(state) {\r\n        var _a;\r\n        unwatchValue === null || unwatchValue === void 0 ? void 0 : unwatchValue();\r\n        const newValue = state && 'value' in state ? state.value : initialValue.value;\r\n        setState({\r\n            value: klona(newValue),\r\n            initialValue: klona(newValue),\r\n            touched: (_a = state === null || state === void 0 ? void 0 : state.touched) !== null && _a !== void 0 ? _a : false,\r\n            errors: (state === null || state === void 0 ? void 0 : state.errors) || [],\r\n        });\r\n        meta.pending = false;\r\n        meta.validated = false;\r\n        validateValidStateOnly();\r\n        // need to watch at next tick to avoid triggering the value watcher\r\n        nextTick(() => {\r\n            watchValue();\r\n        });\r\n    }\r\n    function setValue(newValue) {\r\n        value.value = newValue;\r\n    }\r\n    function setErrors(errors) {\r\n        setState({ errors: Array.isArray(errors) ? errors : [errors] });\r\n    }\r\n    const field = {\r\n        id,\r\n        name,\r\n        label,\r\n        value,\r\n        meta,\r\n        errors,\r\n        errorMessage,\r\n        type,\r\n        checkedValue,\r\n        uncheckedValue,\r\n        bails,\r\n        resetField,\r\n        handleReset: () => resetField(),\r\n        validate: validate$1,\r\n        handleChange,\r\n        handleBlur,\r\n        setState,\r\n        setTouched,\r\n        setErrors,\r\n        setValue,\r\n    };\r\n    provide(FieldContextKey, field);\r\n    if (isRef(rules) && typeof unref(rules) !== 'function') {\r\n        watch(rules, (value, oldValue) => {\r\n            if (es6(value, oldValue)) {\r\n                return;\r\n            }\r\n            meta.validated ? validateWithStateMutation() : validateValidStateOnly();\r\n        }, {\r\n            deep: true,\r\n        });\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        field._vm = getCurrentInstance();\r\n        watch(() => (Object.assign(Object.assign({ errors: errors.value }, meta), { value: value.value })), refreshInspector, {\r\n            deep: true,\r\n        });\r\n        if (!form) {\r\n            registerSingleFieldWithDevtools(field);\r\n        }\r\n    }\r\n    // if no associated form return the field API immediately\r\n    if (!form) {\r\n        return field;\r\n    }\r\n    // associate the field with the given form\r\n    form.register(field);\r\n    onBeforeUnmount(() => {\r\n        form.unregister(field);\r\n    });\r\n    // extract cross-field dependencies in a computed prop\r\n    const dependencies = computed(() => {\r\n        const rulesVal = normalizedRules.value;\r\n        // is falsy, a function schema or a yup schema\r\n        if (!rulesVal || isCallable(rulesVal) || isYupValidator(rulesVal)) {\r\n            return {};\r\n        }\r\n        return Object.keys(rulesVal).reduce((acc, rule) => {\r\n            const deps = extractLocators(rulesVal[rule])\r\n                .map((dep) => dep.__locatorRef)\r\n                .reduce((depAcc, depName) => {\r\n                const depValue = getFromPath(form.values, depName) || form.values[depName];\r\n                if (depValue !== undefined) {\r\n                    depAcc[depName] = depValue;\r\n                }\r\n                return depAcc;\r\n            }, {});\r\n            Object.assign(acc, deps);\r\n            return acc;\r\n        }, {});\r\n    });\r\n    // Adds a watcher that runs the validation whenever field dependencies change\r\n    watch(dependencies, (deps, oldDeps) => {\r\n        // Skip if no dependencies or if the field wasn't manipulated\r\n        if (!Object.keys(deps).length) {\r\n            return;\r\n        }\r\n        const shouldValidate = !es6(deps, oldDeps);\r\n        if (shouldValidate) {\r\n            meta.validated ? validateWithStateMutation() : validateValidStateOnly();\r\n        }\r\n    });\r\n    return field;\r\n}\r\n/**\r\n * Normalizes partial field options to include the full options\r\n */\r\nfunction normalizeOptions(name, opts) {\r\n    const defaults = () => ({\r\n        initialValue: undefined,\r\n        validateOnMount: false,\r\n        bails: true,\r\n        rules: '',\r\n        label: name,\r\n        validateOnValueUpdate: true,\r\n        standalone: false,\r\n    });\r\n    if (!opts) {\r\n        return defaults();\r\n    }\r\n    // TODO: Deprecate this in next major release\r\n    const checkedValue = 'valueProp' in opts ? opts.valueProp : opts.checkedValue;\r\n    return Object.assign(Object.assign(Object.assign({}, defaults()), (opts || {})), { checkedValue });\r\n}\r\n/**\r\n * Extracts the validation rules from a schema\r\n */\r\nfunction extractRuleFromSchema(schema, fieldName) {\r\n    // no schema at all\r\n    if (!schema) {\r\n        return undefined;\r\n    }\r\n    // there is a key on the schema object for this field\r\n    return schema[fieldName];\r\n}\r\nfunction useCheckboxField(name, rules, opts) {\r\n    const form = !(opts === null || opts === void 0 ? void 0 : opts.standalone) ? injectWithSelf(FormContextKey) : undefined;\r\n    const checkedValue = opts === null || opts === void 0 ? void 0 : opts.checkedValue;\r\n    const uncheckedValue = opts === null || opts === void 0 ? void 0 : opts.uncheckedValue;\r\n    function patchCheckboxApi(field) {\r\n        const handleChange = field.handleChange;\r\n        const checked = computed(() => {\r\n            const currentValue = unref(field.value);\r\n            const checkedVal = unref(checkedValue);\r\n            return Array.isArray(currentValue) ? currentValue.includes(checkedVal) : checkedVal === currentValue;\r\n        });\r\n        function handleCheckboxChange(e, shouldValidate = true) {\r\n            var _a, _b;\r\n            if (checked.value === ((_b = (_a = e) === null || _a === void 0 ? void 0 : _a.target) === null || _b === void 0 ? void 0 : _b.checked)) {\r\n                return;\r\n            }\r\n            let newValue = normalizeEventValue(e);\r\n            // Single checkbox field without a form to toggle it's value\r\n            if (!form) {\r\n                newValue = resolveNextCheckboxValue(unref(field.value), unref(checkedValue), unref(uncheckedValue));\r\n            }\r\n            handleChange(newValue, shouldValidate);\r\n        }\r\n        onBeforeUnmount(() => {\r\n            // toggles the checkbox value if it was checked\r\n            if (checked.value) {\r\n                handleCheckboxChange(unref(checkedValue), false);\r\n            }\r\n        });\r\n        return Object.assign(Object.assign({}, field), { checked,\r\n            checkedValue,\r\n            uncheckedValue, handleChange: handleCheckboxChange });\r\n    }\r\n    return patchCheckboxApi(_useField(name, rules, opts));\r\n}\n\nconst FieldImpl = defineComponent({\r\n    name: 'Field',\r\n    inheritAttrs: false,\r\n    props: {\r\n        as: {\r\n            type: [String, Object],\r\n            default: undefined,\r\n        },\r\n        name: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        rules: {\r\n            type: [Object, String, Function],\r\n            default: undefined,\r\n        },\r\n        validateOnMount: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        validateOnBlur: {\r\n            type: Boolean,\r\n            default: undefined,\r\n        },\r\n        validateOnChange: {\r\n            type: Boolean,\r\n            default: undefined,\r\n        },\r\n        validateOnInput: {\r\n            type: Boolean,\r\n            default: undefined,\r\n        },\r\n        validateOnModelUpdate: {\r\n            type: Boolean,\r\n            default: undefined,\r\n        },\r\n        bails: {\r\n            type: Boolean,\r\n            default: () => getConfig().bails,\r\n        },\r\n        label: {\r\n            type: String,\r\n            default: undefined,\r\n        },\r\n        uncheckedValue: {\r\n            type: null,\r\n            default: undefined,\r\n        },\r\n        modelValue: {\r\n            type: null,\r\n            default: IS_ABSENT,\r\n        },\r\n        modelModifiers: {\r\n            type: null,\r\n            default: () => ({}),\r\n        },\r\n        'onUpdate:modelValue': {\r\n            type: null,\r\n            default: undefined,\r\n        },\r\n        standalone: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n    },\r\n    setup(props, ctx) {\r\n        const rules = toRef(props, 'rules');\r\n        const name = toRef(props, 'name');\r\n        const label = toRef(props, 'label');\r\n        const uncheckedValue = toRef(props, 'uncheckedValue');\r\n        const hasModelEvents = isPropPresent(props, 'onUpdate:modelValue');\r\n        const { errors, value, errorMessage, validate: validateField, handleChange, handleBlur, setTouched, resetField, handleReset, meta, checked, setErrors, } = useField(name, rules, {\r\n            validateOnMount: props.validateOnMount,\r\n            bails: props.bails,\r\n            standalone: props.standalone,\r\n            type: ctx.attrs.type,\r\n            initialValue: resolveInitialValue(props, ctx),\r\n            // Only for checkboxes and radio buttons\r\n            checkedValue: ctx.attrs.value,\r\n            uncheckedValue,\r\n            label,\r\n            validateOnValueUpdate: false,\r\n        });\r\n        // If there is a v-model applied on the component we need to emit the `update:modelValue` whenever the value binding changes\r\n        const onChangeHandler = hasModelEvents\r\n            ? function handleChangeWithModel(e, shouldValidate = true) {\r\n                handleChange(e, shouldValidate);\r\n                ctx.emit('update:modelValue', value.value);\r\n            }\r\n            : handleChange;\r\n        const handleInput = (e) => {\r\n            if (!hasCheckedAttr(ctx.attrs.type)) {\r\n                value.value = normalizeEventValue(e);\r\n            }\r\n        };\r\n        const onInputHandler = hasModelEvents\r\n            ? function handleInputWithModel(e) {\r\n                handleInput(e);\r\n                ctx.emit('update:modelValue', value.value);\r\n            }\r\n            : handleInput;\r\n        const fieldProps = computed(() => {\r\n            const { validateOnInput, validateOnChange, validateOnBlur, validateOnModelUpdate } = resolveValidationTriggers(props);\r\n            const baseOnBlur = [handleBlur, ctx.attrs.onBlur, validateOnBlur ? validateField : undefined].filter(Boolean);\r\n            const baseOnInput = [(e) => onChangeHandler(e, validateOnInput), ctx.attrs.onInput].filter(Boolean);\r\n            const baseOnChange = [(e) => onChangeHandler(e, validateOnChange), ctx.attrs.onChange].filter(Boolean);\r\n            const attrs = {\r\n                name: props.name,\r\n                onBlur: baseOnBlur,\r\n                onInput: baseOnInput,\r\n                onChange: baseOnChange,\r\n            };\r\n            attrs['onUpdate:modelValue'] = e => onChangeHandler(e, validateOnModelUpdate);\r\n            if (hasCheckedAttr(ctx.attrs.type) && checked) {\r\n                attrs.checked = checked.value;\r\n            }\r\n            else {\r\n                attrs.value = value.value;\r\n            }\r\n            const tag = resolveTag(props, ctx);\r\n            if (shouldHaveValueBinding(tag, ctx.attrs)) {\r\n                delete attrs.value;\r\n            }\r\n            return attrs;\r\n        });\r\n        const modelValue = toRef(props, 'modelValue');\r\n        watch(modelValue, newModelValue => {\r\n            // Don't attempt to sync absent values\r\n            if (newModelValue === IS_ABSENT && value.value === undefined) {\r\n                return;\r\n            }\r\n            if (newModelValue !== applyModifiers(value.value, props.modelModifiers)) {\r\n                value.value = newModelValue === IS_ABSENT ? undefined : newModelValue;\r\n                validateField();\r\n            }\r\n        });\r\n        function slotProps() {\r\n            return {\r\n                field: fieldProps.value,\r\n                value: value.value,\r\n                meta,\r\n                errors: errors.value,\r\n                errorMessage: errorMessage.value,\r\n                validate: validateField,\r\n                resetField,\r\n                handleChange: onChangeHandler,\r\n                handleInput: onInputHandler,\r\n                handleReset,\r\n                handleBlur,\r\n                setTouched,\r\n                setErrors,\r\n            };\r\n        }\r\n        ctx.expose({\r\n            setErrors,\r\n            setTouched,\r\n            reset: resetField,\r\n            validate: validateField,\r\n            handleChange,\r\n        });\r\n        return () => {\r\n            const tag = resolveDynamicComponent(resolveTag(props, ctx));\r\n            const children = normalizeChildren(tag, ctx, slotProps);\r\n            if (tag) {\r\n                return h(tag, Object.assign(Object.assign({}, ctx.attrs), fieldProps.value), children);\r\n            }\r\n            return children;\r\n        };\r\n    },\r\n});\r\nfunction resolveTag(props, ctx) {\r\n    let tag = props.as || '';\r\n    if (!props.as && !ctx.slots.default) {\r\n        tag = 'input';\r\n    }\r\n    return tag;\r\n}\r\nfunction resolveValidationTriggers(props) {\r\n    var _a, _b, _c, _d;\r\n    const { validateOnInput, validateOnChange, validateOnBlur, validateOnModelUpdate } = getConfig();\r\n    return {\r\n        validateOnInput: (_a = props.validateOnInput) !== null && _a !== void 0 ? _a : validateOnInput,\r\n        validateOnChange: (_b = props.validateOnChange) !== null && _b !== void 0 ? _b : validateOnChange,\r\n        validateOnBlur: (_c = props.validateOnBlur) !== null && _c !== void 0 ? _c : validateOnBlur,\r\n        validateOnModelUpdate: (_d = props.validateOnModelUpdate) !== null && _d !== void 0 ? _d : validateOnModelUpdate,\r\n    };\r\n}\r\nfunction applyModifiers(value, modifiers) {\r\n    if (modifiers.number) {\r\n        return toNumber(value);\r\n    }\r\n    return value;\r\n}\r\nfunction resolveInitialValue(props, ctx) {\r\n    // Gets the initial value either from `value` prop/attr or `v-model` binding (modelValue)\r\n    // For checkboxes and radio buttons it will always be the model value not the `value` attribute\r\n    if (!hasCheckedAttr(ctx.attrs.type)) {\r\n        return isPropPresent(props, 'modelValue') ? props.modelValue : ctx.attrs.value;\r\n    }\r\n    return isPropPresent(props, 'modelValue') ? props.modelValue : undefined;\r\n}\r\nconst Field = FieldImpl;\n\nlet FORM_COUNTER = 0;\r\nfunction useForm(opts) {\r\n    const formId = FORM_COUNTER++;\r\n    // Prevents fields from double resetting their values, which causes checkboxes to toggle their initial value\r\n    // TODO: This won't be needed if we centralize all the state inside the `form` for form inputs\r\n    let RESET_LOCK = false;\r\n    // A lookup containing fields or field groups\r\n    const fieldsByPath = ref({});\r\n    // If the form is currently submitting\r\n    const isSubmitting = ref(false);\r\n    // The number of times the user tried to submit the form\r\n    const submitCount = ref(0);\r\n    // dictionary for field arrays to receive various signals like reset\r\n    const fieldArraysLookup = {};\r\n    // a private ref for all form values\r\n    const formValues = reactive(klona(unref(opts === null || opts === void 0 ? void 0 : opts.initialValues) || {}));\r\n    // the source of errors for the form fields\r\n    const { errorBag, setErrorBag, setFieldErrorBag } = useErrorBag(opts === null || opts === void 0 ? void 0 : opts.initialErrors);\r\n    // Gets the first error of each field\r\n    const errors = computed(() => {\r\n        return keysOf(errorBag.value).reduce((acc, key) => {\r\n            const bag = errorBag.value[key];\r\n            if (bag && bag.length) {\r\n                acc[key] = bag[0];\r\n            }\r\n            return acc;\r\n        }, {});\r\n    });\r\n    function getFirstFieldAtPath(path) {\r\n        const fieldOrGroup = fieldsByPath.value[path];\r\n        return Array.isArray(fieldOrGroup) ? fieldOrGroup[0] : fieldOrGroup;\r\n    }\r\n    function fieldExists(path) {\r\n        return !!fieldsByPath.value[path];\r\n    }\r\n    /**\r\n     * Holds a computed reference to all fields names and labels\r\n     */\r\n    const fieldNames = computed(() => {\r\n        return keysOf(fieldsByPath.value).reduce((names, path) => {\r\n            const field = getFirstFieldAtPath(path);\r\n            if (field) {\r\n                names[path] = unref(field.label || field.name) || '';\r\n            }\r\n            return names;\r\n        }, {});\r\n    });\r\n    const fieldBailsMap = computed(() => {\r\n        return keysOf(fieldsByPath.value).reduce((map, path) => {\r\n            var _a;\r\n            const field = getFirstFieldAtPath(path);\r\n            if (field) {\r\n                map[path] = (_a = field.bails) !== null && _a !== void 0 ? _a : true;\r\n            }\r\n            return map;\r\n        }, {});\r\n    });\r\n    // mutable non-reactive reference to initial errors\r\n    // we need this to process initial errors then unset them\r\n    const initialErrors = Object.assign({}, ((opts === null || opts === void 0 ? void 0 : opts.initialErrors) || {}));\r\n    // initial form values\r\n    const { initialValues, originalInitialValues, setInitialValues } = useFormInitialValues(fieldsByPath, formValues, opts === null || opts === void 0 ? void 0 : opts.initialValues);\r\n    // form meta aggregations\r\n    const meta = useFormMeta(fieldsByPath, formValues, initialValues, errors);\r\n    const schema = opts === null || opts === void 0 ? void 0 : opts.validationSchema;\r\n    const formCtx = {\r\n        formId,\r\n        fieldsByPath,\r\n        values: formValues,\r\n        errorBag,\r\n        errors,\r\n        schema,\r\n        submitCount,\r\n        meta,\r\n        isSubmitting,\r\n        fieldArraysLookup,\r\n        validateSchema: unref(schema) ? validateSchema : undefined,\r\n        validate,\r\n        register: registerField,\r\n        unregister: unregisterField,\r\n        setFieldErrorBag,\r\n        validateField,\r\n        setFieldValue,\r\n        setValues,\r\n        setErrors,\r\n        setFieldError,\r\n        setFieldTouched,\r\n        setTouched,\r\n        resetForm,\r\n        handleSubmit,\r\n        stageInitialValue,\r\n        unsetInitialValue,\r\n        setFieldInitialValue,\r\n    };\r\n    function isFieldGroup(fieldOrGroup) {\r\n        return Array.isArray(fieldOrGroup);\r\n    }\r\n    function applyFieldMutation(fieldOrGroup, mutation) {\r\n        if (Array.isArray(fieldOrGroup)) {\r\n            return fieldOrGroup.forEach(mutation);\r\n        }\r\n        return mutation(fieldOrGroup);\r\n    }\r\n    /**\r\n     * Manually sets an error message on a specific field\r\n     */\r\n    function setFieldError(field, message) {\r\n        setFieldErrorBag(field, message);\r\n    }\r\n    /**\r\n     * Sets errors for the fields specified in the object\r\n     */\r\n    function setErrors(fields) {\r\n        setErrorBag(fields);\r\n    }\r\n    /**\r\n     * Sets a single field value\r\n     */\r\n    function setFieldValue(field, value, { force } = { force: false }) {\r\n        var _a;\r\n        const fieldInstance = fieldsByPath.value[field];\r\n        const clonedValue = klona(value);\r\n        // field wasn't found, create a virtual field as a placeholder\r\n        if (!fieldInstance) {\r\n            setInPath(formValues, field, clonedValue);\r\n            return;\r\n        }\r\n        if (isFieldGroup(fieldInstance) && ((_a = fieldInstance[0]) === null || _a === void 0 ? void 0 : _a.type) === 'checkbox' && !Array.isArray(value)) {\r\n            // Multiple checkboxes, and only one of them got updated\r\n            const newValue = klona(resolveNextCheckboxValue(getFromPath(formValues, field) || [], value, undefined));\r\n            setInPath(formValues, field, newValue);\r\n            return;\r\n        }\r\n        let newValue = value;\r\n        // Single Checkbox: toggles the field value unless the field is being reset then force it\r\n        if (!isFieldGroup(fieldInstance) && fieldInstance.type === 'checkbox' && !force && !RESET_LOCK) {\r\n            newValue = klona(resolveNextCheckboxValue(getFromPath(formValues, field), value, unref(fieldInstance.uncheckedValue)));\r\n        }\r\n        setInPath(formValues, field, newValue);\r\n    }\r\n    /**\r\n     * Sets multiple fields values\r\n     */\r\n    function setValues(fields) {\r\n        // clean up old values\r\n        keysOf(formValues).forEach(key => {\r\n            delete formValues[key];\r\n        });\r\n        // set up new values\r\n        keysOf(fields).forEach(path => {\r\n            setFieldValue(path, fields[path]);\r\n        });\r\n        // regenerate the arrays when the form values change\r\n        Object.values(fieldArraysLookup).forEach(f => f && f.reset());\r\n    }\r\n    /**\r\n     * Sets the touched meta state on a field\r\n     */\r\n    function setFieldTouched(field, isTouched) {\r\n        const fieldInstance = fieldsByPath.value[field];\r\n        if (fieldInstance) {\r\n            applyFieldMutation(fieldInstance, f => f.setTouched(isTouched));\r\n        }\r\n    }\r\n    /**\r\n     * Sets the touched meta state on multiple fields\r\n     */\r\n    function setTouched(fields) {\r\n        keysOf(fields).forEach(field => {\r\n            setFieldTouched(field, !!fields[field]);\r\n        });\r\n    }\r\n    /**\r\n     * Resets all fields\r\n     */\r\n    function resetForm(state) {\r\n        RESET_LOCK = true;\r\n        // set initial values if provided\r\n        if (state === null || state === void 0 ? void 0 : state.values) {\r\n            setInitialValues(state.values);\r\n            setValues(state === null || state === void 0 ? void 0 : state.values);\r\n        }\r\n        else {\r\n            // clean up the initial values back to the original\r\n            setInitialValues(originalInitialValues.value);\r\n            // otherwise clean the current values\r\n            setValues(originalInitialValues.value);\r\n        }\r\n        Object.values(fieldsByPath.value).forEach(field => {\r\n            if (!field) {\r\n                return;\r\n            }\r\n            // avoid resetting the field values, because they should've been reset already.\r\n            applyFieldMutation(field, f => f.resetField());\r\n        });\r\n        if (state === null || state === void 0 ? void 0 : state.touched) {\r\n            setTouched(state.touched);\r\n        }\r\n        setErrors((state === null || state === void 0 ? void 0 : state.errors) || {});\r\n        submitCount.value = (state === null || state === void 0 ? void 0 : state.submitCount) || 0;\r\n        nextTick(() => {\r\n            RESET_LOCK = false;\r\n        });\r\n    }\r\n    function insertFieldAtPath(field, path) {\r\n        const rawField = markRaw(field);\r\n        const fieldPath = path;\r\n        // first field at that path\r\n        if (!fieldsByPath.value[fieldPath]) {\r\n            fieldsByPath.value[fieldPath] = rawField;\r\n            return;\r\n        }\r\n        const fieldAtPath = fieldsByPath.value[fieldPath];\r\n        if (fieldAtPath && !Array.isArray(fieldAtPath)) {\r\n            fieldsByPath.value[fieldPath] = [fieldAtPath];\r\n        }\r\n        // add the new array to that path\r\n        fieldsByPath.value[fieldPath] = [...fieldsByPath.value[fieldPath], rawField];\r\n    }\r\n    function removeFieldFromPath(field, path) {\r\n        const fieldPath = path;\r\n        const fieldAtPath = fieldsByPath.value[fieldPath];\r\n        if (!fieldAtPath) {\r\n            return;\r\n        }\r\n        // same field at path\r\n        if (!isFieldGroup(fieldAtPath) && field.id === fieldAtPath.id) {\r\n            delete fieldsByPath.value[fieldPath];\r\n            return;\r\n        }\r\n        if (isFieldGroup(fieldAtPath)) {\r\n            const idx = fieldAtPath.findIndex(f => f.id === field.id);\r\n            if (idx === -1) {\r\n                return;\r\n            }\r\n            fieldAtPath.splice(idx, 1);\r\n            if (fieldAtPath.length === 1) {\r\n                fieldsByPath.value[fieldPath] = fieldAtPath[0];\r\n                return;\r\n            }\r\n            if (!fieldAtPath.length) {\r\n                delete fieldsByPath.value[fieldPath];\r\n            }\r\n        }\r\n    }\r\n    function registerField(field) {\r\n        const fieldPath = unref(field.name);\r\n        insertFieldAtPath(field, fieldPath);\r\n        if (isRef(field.name)) {\r\n            // ensures when a field's name was already taken that it preserves its same value\r\n            // necessary for fields generated by loops\r\n            watch(field.name, async (newPath, oldPath) => {\r\n                // cache the value\r\n                await nextTick();\r\n                removeFieldFromPath(field, oldPath);\r\n                insertFieldAtPath(field, newPath);\r\n                // re-validate if either path had errors before\r\n                if (errors.value[oldPath] || errors.value[newPath]) {\r\n                    validateField(newPath);\r\n                }\r\n                // clean up the old path if no other field is sharing that name\r\n                // #3325\r\n                await nextTick();\r\n                if (!fieldExists(oldPath)) {\r\n                    unsetPath(formValues, oldPath);\r\n                }\r\n            });\r\n        }\r\n        // if field already had errors (initial errors) that's not user-set, validate it again to ensure state is correct\r\n        // the difference being that `initialErrors` will contain the error message while other errors (pre-validated schema) won't have them as initial errors\r\n        // #3342\r\n        const initialErrorMessage = unref(field.errorMessage);\r\n        if (initialErrorMessage && (initialErrors === null || initialErrors === void 0 ? void 0 : initialErrors[fieldPath]) !== initialErrorMessage) {\r\n            validateField(fieldPath);\r\n        }\r\n        // marks the initial error as \"consumed\" so it won't be matched later with same non-initial error\r\n        delete initialErrors[fieldPath];\r\n    }\r\n    function unregisterField(field) {\r\n        const fieldName = unref(field.name);\r\n        removeFieldFromPath(field, fieldName);\r\n        nextTick(() => {\r\n            // clears a field error on unmounted\r\n            // we wait till next tick to make sure if the field is completely removed and doesn't have any siblings like checkboxes\r\n            // #3384\r\n            if (!fieldExists(fieldName)) {\r\n                setFieldError(fieldName, undefined);\r\n                unsetPath(formValues, fieldName);\r\n            }\r\n        });\r\n    }\r\n    async function validate(opts) {\r\n        if (formCtx.validateSchema) {\r\n            return formCtx.validateSchema((opts === null || opts === void 0 ? void 0 : opts.mode) || 'force');\r\n        }\r\n        // No schema, each field is responsible to validate itself\r\n        const validations = await Promise.all(Object.values(fieldsByPath.value).map(field => {\r\n            const fieldInstance = Array.isArray(field) ? field[0] : field;\r\n            if (!fieldInstance) {\r\n                return Promise.resolve({ key: '', valid: true, errors: [] });\r\n            }\r\n            return fieldInstance.validate(opts).then((result) => {\r\n                return {\r\n                    key: unref(fieldInstance.name),\r\n                    valid: result.valid,\r\n                    errors: result.errors,\r\n                };\r\n            });\r\n        }));\r\n        const results = {};\r\n        const errors = {};\r\n        for (const validation of validations) {\r\n            results[validation.key] = {\r\n                valid: validation.valid,\r\n                errors: validation.errors,\r\n            };\r\n            if (validation.errors.length) {\r\n                errors[validation.key] = validation.errors[0];\r\n            }\r\n        }\r\n        return {\r\n            valid: validations.every(r => r.valid),\r\n            results,\r\n            errors,\r\n        };\r\n    }\r\n    async function validateField(field) {\r\n        const fieldInstance = fieldsByPath.value[field];\r\n        if (!fieldInstance) {\r\n            warn$1(`field with name ${field} was not found`);\r\n            return Promise.resolve({ errors: [], valid: true });\r\n        }\r\n        if (Array.isArray(fieldInstance)) {\r\n            return fieldInstance.map(f => f.validate())[0];\r\n        }\r\n        return fieldInstance.validate();\r\n    }\r\n    function handleSubmit(fn, onValidationError) {\r\n        return function submissionHandler(e) {\r\n            if (e instanceof Event) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n            // Touch all fields\r\n            setTouched(keysOf(fieldsByPath.value).reduce((acc, field) => {\r\n                acc[field] = true;\r\n                return acc;\r\n            }, {}));\r\n            isSubmitting.value = true;\r\n            submitCount.value++;\r\n            return validate()\r\n                .then(result => {\r\n                if (result.valid && typeof fn === 'function') {\r\n                    return fn(klona(formValues), {\r\n                        evt: e,\r\n                        setErrors,\r\n                        setFieldError,\r\n                        setTouched,\r\n                        setFieldTouched,\r\n                        setValues,\r\n                        setFieldValue,\r\n                        resetForm,\r\n                    });\r\n                }\r\n                if (!result.valid && typeof onValidationError === 'function') {\r\n                    onValidationError({\r\n                        values: klona(formValues),\r\n                        evt: e,\r\n                        errors: result.errors,\r\n                        results: result.results,\r\n                    });\r\n                }\r\n            })\r\n                .then(returnVal => {\r\n                isSubmitting.value = false;\r\n                return returnVal;\r\n            }, err => {\r\n                isSubmitting.value = false;\r\n                // re-throw the err so it doesn't go silent\r\n                throw err;\r\n            });\r\n        };\r\n    }\r\n    function setFieldInitialValue(path, value) {\r\n        setInPath(initialValues.value, path, klona(value));\r\n    }\r\n    function unsetInitialValue(path) {\r\n        unsetPath(initialValues.value, path);\r\n    }\r\n    /**\r\n     * Sneaky function to set initial field values\r\n     */\r\n    function stageInitialValue(path, value) {\r\n        setInPath(formValues, path, value);\r\n        setFieldInitialValue(path, value);\r\n    }\r\n    async function _validateSchema() {\r\n        const schemaValue = unref(schema);\r\n        if (!schemaValue) {\r\n            return { valid: true, results: {}, errors: {} };\r\n        }\r\n        const formResult = isYupValidator(schemaValue)\r\n            ? await validateYupSchema(schemaValue, formValues)\r\n            : await validateObjectSchema(schemaValue, formValues, {\r\n                names: fieldNames.value,\r\n                bailsMap: fieldBailsMap.value,\r\n            });\r\n        return formResult;\r\n    }\r\n    /**\r\n     * Batches validation runs in 5ms batches\r\n     */\r\n    const debouncedSchemaValidation = debounceAsync(_validateSchema, 5);\r\n    async function validateSchema(mode) {\r\n        const formResult = await debouncedSchemaValidation();\r\n        // fields by id lookup\r\n        const fieldsById = formCtx.fieldsByPath.value || {};\r\n        // errors fields names, we need it to also check if custom errors are updated\r\n        const currentErrorsPaths = keysOf(formCtx.errorBag.value);\r\n        // collect all the keys from the schema and all fields\r\n        // this ensures we have a complete keymap of all the fields\r\n        const paths = [\r\n            ...new Set([...keysOf(formResult.results), ...keysOf(fieldsById), ...currentErrorsPaths]),\r\n        ];\r\n        // aggregates the paths into a single result object while applying the results on the fields\r\n        return paths.reduce((validation, path) => {\r\n            const field = fieldsById[path];\r\n            const messages = (formResult.results[path] || { errors: [] }).errors;\r\n            const fieldResult = {\r\n                errors: messages,\r\n                valid: !messages.length,\r\n            };\r\n            validation.results[path] = fieldResult;\r\n            if (!fieldResult.valid) {\r\n                validation.errors[path] = fieldResult.errors[0];\r\n            }\r\n            // field not rendered\r\n            if (!field) {\r\n                setFieldError(path, messages);\r\n                return validation;\r\n            }\r\n            // always update the valid flag regardless of the mode\r\n            applyFieldMutation(field, f => (f.meta.valid = fieldResult.valid));\r\n            if (mode === 'silent') {\r\n                return validation;\r\n            }\r\n            const wasValidated = Array.isArray(field) ? field.some(f => f.meta.validated) : field.meta.validated;\r\n            if (mode === 'validated-only' && !wasValidated) {\r\n                return validation;\r\n            }\r\n            applyFieldMutation(field, f => f.setState({ errors: fieldResult.errors }));\r\n            return validation;\r\n        }, { valid: formResult.valid, results: {}, errors: {} });\r\n    }\r\n    const submitForm = handleSubmit((_, { evt }) => {\r\n        if (isFormSubmitEvent(evt)) {\r\n            evt.target.submit();\r\n        }\r\n    });\r\n    // Trigger initial validation\r\n    onMounted(() => {\r\n        if (opts === null || opts === void 0 ? void 0 : opts.initialErrors) {\r\n            setErrors(opts.initialErrors);\r\n        }\r\n        if (opts === null || opts === void 0 ? void 0 : opts.initialTouched) {\r\n            setTouched(opts.initialTouched);\r\n        }\r\n        // if validate on mount was enabled\r\n        if (opts === null || opts === void 0 ? void 0 : opts.validateOnMount) {\r\n            validate();\r\n            return;\r\n        }\r\n        // otherwise run initial silent validation through schema if available\r\n        // the useField should skip their own silent validation if a yup schema is present\r\n        if (formCtx.validateSchema) {\r\n            formCtx.validateSchema('silent');\r\n        }\r\n    });\r\n    if (isRef(schema)) {\r\n        watch(schema, () => {\r\n            var _a;\r\n            (_a = formCtx.validateSchema) === null || _a === void 0 ? void 0 : _a.call(formCtx, 'validated-only');\r\n        });\r\n    }\r\n    // Provide injections\r\n    provide(FormContextKey, formCtx);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        registerFormWithDevTools(formCtx);\r\n        watch(() => (Object.assign(Object.assign({ errors: errorBag.value }, meta.value), { values: formValues, isSubmitting: isSubmitting.value, submitCount: submitCount.value })), refreshInspector, {\r\n            deep: true,\r\n        });\r\n    }\r\n    return {\r\n        errors,\r\n        meta,\r\n        values: formValues,\r\n        isSubmitting,\r\n        submitCount,\r\n        validate,\r\n        validateField,\r\n        handleReset: () => resetForm(),\r\n        resetForm,\r\n        handleSubmit,\r\n        submitForm,\r\n        setFieldError,\r\n        setErrors,\r\n        setFieldValue,\r\n        setValues,\r\n        setFieldTouched,\r\n        setTouched,\r\n    };\r\n}\r\n/**\r\n * Manages form meta aggregation\r\n */\r\nfunction useFormMeta(fieldsByPath, currentValues, initialValues, errors) {\r\n    const MERGE_STRATEGIES = {\r\n        touched: 'some',\r\n        pending: 'some',\r\n        valid: 'every',\r\n    };\r\n    const isDirty = computed(() => {\r\n        return !es6(currentValues, unref(initialValues));\r\n    });\r\n    function calculateFlags() {\r\n        const fields = Object.values(fieldsByPath.value).flat(1).filter(Boolean);\r\n        return keysOf(MERGE_STRATEGIES).reduce((acc, flag) => {\r\n            const mergeMethod = MERGE_STRATEGIES[flag];\r\n            acc[flag] = fields[mergeMethod](field => field.meta[flag]);\r\n            return acc;\r\n        }, {});\r\n    }\r\n    const flags = reactive(calculateFlags());\r\n    watchEffect(() => {\r\n        const value = calculateFlags();\r\n        flags.touched = value.touched;\r\n        flags.valid = value.valid;\r\n        flags.pending = value.pending;\r\n    });\r\n    return computed(() => {\r\n        return Object.assign(Object.assign({ initialValues: unref(initialValues) }, flags), { valid: flags.valid && !keysOf(errors.value).length, dirty: isDirty.value });\r\n    });\r\n}\r\n/**\r\n * Manages the initial values prop\r\n */\r\nfunction useFormInitialValues(fields, formValues, providedValues) {\r\n    // these are the mutable initial values as the fields are mounted/unmounted\r\n    const initialValues = ref(klona(unref(providedValues)) || {});\r\n    // these are the original initial value as provided by the user initially, they don't keep track of conditional fields\r\n    // this is important because some conditional fields will overwrite the initial values for other fields who had the same name\r\n    // like array fields, any push/insert operation will overwrite the initial values because they \"create new fields\"\r\n    // so these are the values that the reset function should use\r\n    // these only change when the user explicitly chanegs the initial values or when the user resets them with new values.\r\n    const originalInitialValues = ref(klona(unref(providedValues)) || {});\r\n    function setInitialValues(values, updateFields = false) {\r\n        initialValues.value = klona(values);\r\n        originalInitialValues.value = klona(values);\r\n        if (!updateFields) {\r\n            return;\r\n        }\r\n        // update the pristine non-touched fields\r\n        // those are excluded because it's unlikely you want to change the form values using initial values\r\n        // we mostly watch them for API population or newly inserted fields\r\n        // if the user API is taking too much time before user interaction they should consider disabling or hiding their inputs until the values are ready\r\n        keysOf(fields.value).forEach(fieldPath => {\r\n            const field = fields.value[fieldPath];\r\n            const wasTouched = Array.isArray(field) ? field.some(f => f.meta.touched) : field === null || field === void 0 ? void 0 : field.meta.touched;\r\n            if (!field || wasTouched) {\r\n                return;\r\n            }\r\n            const newValue = getFromPath(initialValues.value, fieldPath);\r\n            setInPath(formValues, fieldPath, klona(newValue));\r\n        });\r\n    }\r\n    if (isRef(providedValues)) {\r\n        watch(providedValues, value => {\r\n            setInitialValues(value, true);\r\n        }, {\r\n            deep: true,\r\n        });\r\n    }\r\n    return {\r\n        initialValues,\r\n        originalInitialValues,\r\n        setInitialValues,\r\n    };\r\n}\r\nfunction useErrorBag(initialErrors) {\r\n    const errorBag = ref({});\r\n    function normalizeErrorItem(message) {\r\n        return Array.isArray(message) ? message : message ? [message] : [];\r\n    }\r\n    /**\r\n     * Manually sets an error message on a specific field\r\n     */\r\n    function setFieldErrorBag(field, message) {\r\n        if (!message) {\r\n            delete errorBag.value[field];\r\n            return;\r\n        }\r\n        errorBag.value[field] = normalizeErrorItem(message);\r\n    }\r\n    /**\r\n     * Sets errors for the fields specified in the object\r\n     */\r\n    function setErrorBag(fields) {\r\n        errorBag.value = keysOf(fields).reduce((acc, key) => {\r\n            const message = fields[key];\r\n            if (message) {\r\n                acc[key] = normalizeErrorItem(message);\r\n            }\r\n            return acc;\r\n        }, {});\r\n    }\r\n    if (initialErrors) {\r\n        setErrorBag(initialErrors);\r\n    }\r\n    return {\r\n        errorBag,\r\n        setErrorBag,\r\n        setFieldErrorBag,\r\n    };\r\n}\n\nconst FormImpl = defineComponent({\r\n    name: 'Form',\r\n    inheritAttrs: false,\r\n    props: {\r\n        as: {\r\n            type: String,\r\n            default: 'form',\r\n        },\r\n        validationSchema: {\r\n            type: Object,\r\n            default: undefined,\r\n        },\r\n        initialValues: {\r\n            type: Object,\r\n            default: undefined,\r\n        },\r\n        initialErrors: {\r\n            type: Object,\r\n            default: undefined,\r\n        },\r\n        initialTouched: {\r\n            type: Object,\r\n            default: undefined,\r\n        },\r\n        validateOnMount: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        onSubmit: {\r\n            type: Function,\r\n            default: undefined,\r\n        },\r\n        onInvalidSubmit: {\r\n            type: Function,\r\n            default: undefined,\r\n        },\r\n    },\r\n    setup(props, ctx) {\r\n        const initialValues = toRef(props, 'initialValues');\r\n        const validationSchema = toRef(props, 'validationSchema');\r\n        const { errors, values, meta, isSubmitting, submitCount, validate, validateField, handleReset, resetForm, handleSubmit, submitForm, setErrors, setFieldError, setFieldValue, setValues, setFieldTouched, setTouched, } = useForm({\r\n            validationSchema: validationSchema.value ? validationSchema : undefined,\r\n            initialValues,\r\n            initialErrors: props.initialErrors,\r\n            initialTouched: props.initialTouched,\r\n            validateOnMount: props.validateOnMount,\r\n        });\r\n        const onSubmit = props.onSubmit ? handleSubmit(props.onSubmit, props.onInvalidSubmit) : submitForm;\r\n        function handleFormReset(e) {\r\n            if (isEvent(e)) {\r\n                // Prevent default form reset behavior\r\n                e.preventDefault();\r\n            }\r\n            handleReset();\r\n            if (typeof ctx.attrs.onReset === 'function') {\r\n                ctx.attrs.onReset();\r\n            }\r\n        }\r\n        function handleScopedSlotSubmit(evt, onSubmit) {\r\n            const onSuccess = typeof evt === 'function' && !onSubmit ? evt : onSubmit;\r\n            return handleSubmit(onSuccess, props.onInvalidSubmit)(evt);\r\n        }\r\n        function slotProps() {\r\n            return {\r\n                meta: meta.value,\r\n                errors: errors.value,\r\n                values: values,\r\n                isSubmitting: isSubmitting.value,\r\n                submitCount: submitCount.value,\r\n                validate,\r\n                validateField,\r\n                handleSubmit: handleScopedSlotSubmit,\r\n                handleReset,\r\n                submitForm,\r\n                setErrors,\r\n                setFieldError,\r\n                setFieldValue,\r\n                setValues,\r\n                setFieldTouched,\r\n                setTouched,\r\n                resetForm,\r\n            };\r\n        }\r\n        // expose these functions and methods as part of public API\r\n        ctx.expose({\r\n            setFieldError,\r\n            setErrors,\r\n            setFieldValue,\r\n            setValues,\r\n            setFieldTouched,\r\n            setTouched,\r\n            resetForm,\r\n            validate,\r\n            validateField,\r\n        });\r\n        return function renderForm() {\r\n            // avoid resolving the form component as itself\r\n            const tag = props.as === 'form' ? props.as : resolveDynamicComponent(props.as);\r\n            const children = normalizeChildren(tag, ctx, slotProps);\r\n            if (!props.as) {\r\n                return children;\r\n            }\r\n            // Attributes to add on a native `form` tag\r\n            const formAttrs = props.as === 'form'\r\n                ? {\r\n                    // Disables native validation as vee-validate will handle it.\r\n                    novalidate: true,\r\n                }\r\n                : {};\r\n            return h(tag, Object.assign(Object.assign(Object.assign({}, formAttrs), ctx.attrs), { onSubmit, onReset: handleFormReset }), children);\r\n        };\r\n    },\r\n});\r\nconst Form = FormImpl;\n\nlet FIELD_ARRAY_COUNTER = 0;\r\nfunction useFieldArray(arrayPath) {\r\n    const id = FIELD_ARRAY_COUNTER++;\r\n    const form = injectWithSelf(FormContextKey, undefined);\r\n    const fields = ref([]);\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    const noOp = () => { };\r\n    const noOpApi = {\r\n        fields: readonly(fields),\r\n        remove: noOp,\r\n        push: noOp,\r\n        swap: noOp,\r\n        insert: noOp,\r\n        update: noOp,\r\n        replace: noOp,\r\n        prepend: noOp,\r\n    };\r\n    if (!form) {\r\n        warn('FieldArray requires being a child of `<Form/>` or `useForm` being called before it. Array fields may not work correctly');\r\n        return noOpApi;\r\n    }\r\n    if (!unref(arrayPath)) {\r\n        warn('FieldArray requires a field path to be provided, did you forget to pass the `name` prop?');\r\n        return noOpApi;\r\n    }\r\n    let entryCounter = 0;\r\n    function initFields() {\r\n        const currentValues = getFromPath(form === null || form === void 0 ? void 0 : form.values, unref(arrayPath), []);\r\n        fields.value = currentValues.map(createEntry);\r\n        updateEntryFlags();\r\n    }\r\n    initFields();\r\n    function updateEntryFlags() {\r\n        const fieldsLength = fields.value.length;\r\n        for (let i = 0; i < fieldsLength; i++) {\r\n            const entry = fields.value[i];\r\n            entry.isFirst = i === 0;\r\n            entry.isLast = i === fieldsLength - 1;\r\n        }\r\n    }\r\n    function createEntry(value) {\r\n        const key = entryCounter++;\r\n        const entry = {\r\n            key,\r\n            value: computed(() => {\r\n                const currentValues = getFromPath(form === null || form === void 0 ? void 0 : form.values, unref(arrayPath), []);\r\n                const idx = fields.value.findIndex(e => e.key === key);\r\n                return idx === -1 ? value : currentValues[idx];\r\n            }),\r\n            isFirst: false,\r\n            isLast: false,\r\n        };\r\n        return entry;\r\n    }\r\n    function remove(idx) {\r\n        const pathName = unref(arrayPath);\r\n        const pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\r\n        if (!pathValue || !Array.isArray(pathValue)) {\r\n            return;\r\n        }\r\n        const newValue = [...pathValue];\r\n        newValue.splice(idx, 1);\r\n        form === null || form === void 0 ? void 0 : form.unsetInitialValue(pathName + `[${idx}]`);\r\n        form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, newValue);\r\n        fields.value.splice(idx, 1);\r\n        updateEntryFlags();\r\n    }\r\n    function push(value) {\r\n        const pathName = unref(arrayPath);\r\n        const pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\r\n        const normalizedPathValue = isNullOrUndefined(pathValue) ? [] : pathValue;\r\n        if (!Array.isArray(normalizedPathValue)) {\r\n            return;\r\n        }\r\n        const newValue = [...normalizedPathValue];\r\n        newValue.push(value);\r\n        form === null || form === void 0 ? void 0 : form.stageInitialValue(pathName + `[${newValue.length - 1}]`, value);\r\n        form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, newValue);\r\n        fields.value.push(createEntry(value));\r\n        updateEntryFlags();\r\n    }\r\n    function swap(indexA, indexB) {\r\n        const pathName = unref(arrayPath);\r\n        const pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\r\n        if (!Array.isArray(pathValue) || !pathValue[indexA] || !pathValue[indexB]) {\r\n            return;\r\n        }\r\n        const newValue = [...pathValue];\r\n        const newFields = [...fields.value];\r\n        // the old switcheroo\r\n        const temp = newValue[indexA];\r\n        newValue[indexA] = newValue[indexB];\r\n        newValue[indexB] = temp;\r\n        const tempEntry = newFields[indexA];\r\n        newFields[indexA] = newFields[indexB];\r\n        newFields[indexB] = tempEntry;\r\n        form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, newValue);\r\n        fields.value = newFields;\r\n        updateEntryFlags();\r\n    }\r\n    function insert(idx, value) {\r\n        const pathName = unref(arrayPath);\r\n        const pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\r\n        if (!Array.isArray(pathValue) || pathValue.length < idx) {\r\n            return;\r\n        }\r\n        const newValue = [...pathValue];\r\n        const newFields = [...fields.value];\r\n        newValue.splice(idx, 0, value);\r\n        newFields.splice(idx, 0, createEntry(value));\r\n        form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, newValue);\r\n        fields.value = newFields;\r\n        updateEntryFlags();\r\n    }\r\n    function replace(arr) {\r\n        const pathName = unref(arrayPath);\r\n        form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, arr);\r\n        initFields();\r\n    }\r\n    function update(idx, value) {\r\n        const pathName = unref(arrayPath);\r\n        const pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\r\n        if (!Array.isArray(pathValue) || pathValue.length - 1 < idx) {\r\n            return;\r\n        }\r\n        form === null || form === void 0 ? void 0 : form.setFieldValue(`${pathName}[${idx}]`, value);\r\n    }\r\n    function prepend(value) {\r\n        const pathName = unref(arrayPath);\r\n        const pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\r\n        const normalizedPathValue = isNullOrUndefined(pathValue) ? [] : pathValue;\r\n        if (!Array.isArray(normalizedPathValue)) {\r\n            return;\r\n        }\r\n        const newValue = [value, ...normalizedPathValue];\r\n        form === null || form === void 0 ? void 0 : form.stageInitialValue(pathName + `[${newValue.length - 1}]`, value);\r\n        form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, newValue);\r\n        fields.value.unshift(createEntry(value));\r\n        updateEntryFlags();\r\n    }\r\n    form.fieldArraysLookup[id] = {\r\n        reset: initFields,\r\n    };\r\n    onBeforeUnmount(() => {\r\n        delete form.fieldArraysLookup[id];\r\n    });\r\n    return {\r\n        fields: readonly(fields),\r\n        remove,\r\n        push,\r\n        swap,\r\n        insert,\r\n        update,\r\n        replace,\r\n        prepend,\r\n    };\r\n}\n\nconst FieldArrayImpl = defineComponent({\r\n    name: 'FieldArray',\r\n    inheritAttrs: false,\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n    },\r\n    setup(props, ctx) {\r\n        const { push, remove, swap, insert, replace, update, prepend, fields } = useFieldArray(toRef(props, 'name'));\r\n        function slotProps() {\r\n            return {\r\n                fields: fields.value,\r\n                push,\r\n                remove,\r\n                swap,\r\n                insert,\r\n                update,\r\n                replace,\r\n                prepend,\r\n            };\r\n        }\r\n        ctx.expose({\r\n            push,\r\n            remove,\r\n            swap,\r\n            insert,\r\n            update,\r\n            replace,\r\n            prepend,\r\n        });\r\n        return () => {\r\n            const children = normalizeChildren(undefined, ctx, slotProps);\r\n            return children;\r\n        };\r\n    },\r\n});\r\nconst FieldArray = FieldArrayImpl;\n\nconst ErrorMessageImpl = defineComponent({\r\n    name: 'ErrorMessage',\r\n    props: {\r\n        as: {\r\n            type: String,\r\n            default: undefined,\r\n        },\r\n        name: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n    },\r\n    setup(props, ctx) {\r\n        const form = inject(FormContextKey, undefined);\r\n        const message = computed(() => {\r\n            return form === null || form === void 0 ? void 0 : form.errors.value[props.name];\r\n        });\r\n        function slotProps() {\r\n            return {\r\n                message: message.value,\r\n            };\r\n        }\r\n        return () => {\r\n            // Renders nothing if there are no messages\r\n            if (!message.value) {\r\n                return undefined;\r\n            }\r\n            const tag = (props.as ? resolveDynamicComponent(props.as) : props.as);\r\n            const children = normalizeChildren(tag, ctx, slotProps);\r\n            const attrs = Object.assign({ role: 'alert' }, ctx.attrs);\r\n            // If no tag was specified and there are children\r\n            // render the slot as is without wrapping it\r\n            if (!tag && (Array.isArray(children) || !children) && (children === null || children === void 0 ? void 0 : children.length)) {\r\n                return children;\r\n            }\r\n            // If no children in slot\r\n            // render whatever specified and fallback to a <span> with the message in it's contents\r\n            if ((Array.isArray(children) || !children) && !(children === null || children === void 0 ? void 0 : children.length)) {\r\n                return h(tag || 'span', attrs, message.value);\r\n            }\r\n            return h(tag, attrs, children);\r\n        };\r\n    },\r\n});\r\nconst ErrorMessage = ErrorMessageImpl;\n\nfunction useResetForm() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return function resetForm(state) {\r\n        if (!form) {\r\n            return;\r\n        }\r\n        return form.resetForm(state);\r\n    };\r\n}\n\n/**\r\n * If a field is dirty or not\r\n */\r\nfunction useIsFieldDirty(path) {\r\n    const form = injectWithSelf(FormContextKey);\r\n    let field = path ? undefined : inject(FieldContextKey);\r\n    return computed(() => {\r\n        if (path) {\r\n            field = normalizeField(form === null || form === void 0 ? void 0 : form.fieldsByPath.value[unref(path)]);\r\n        }\r\n        if (!field) {\r\n            warn(`field with name ${unref(path)} was not found`);\r\n            return false;\r\n        }\r\n        return field.meta.dirty;\r\n    });\r\n}\n\n/**\r\n * If a field is touched or not\r\n */\r\nfunction useIsFieldTouched(path) {\r\n    const form = injectWithSelf(FormContextKey);\r\n    let field = path ? undefined : inject(FieldContextKey);\r\n    return computed(() => {\r\n        if (path) {\r\n            field = normalizeField(form === null || form === void 0 ? void 0 : form.fieldsByPath.value[unref(path)]);\r\n        }\r\n        if (!field) {\r\n            warn(`field with name ${unref(path)} was not found`);\r\n            return false;\r\n        }\r\n        return field.meta.touched;\r\n    });\r\n}\n\n/**\r\n * If a field is validated and is valid\r\n */\r\nfunction useIsFieldValid(path) {\r\n    const form = injectWithSelf(FormContextKey);\r\n    let field = path ? undefined : inject(FieldContextKey);\r\n    return computed(() => {\r\n        if (path) {\r\n            field = normalizeField(form === null || form === void 0 ? void 0 : form.fieldsByPath.value[unref(path)]);\r\n        }\r\n        if (!field) {\r\n            warn(`field with name ${unref(path)} was not found`);\r\n            return false;\r\n        }\r\n        return field.meta.valid;\r\n    });\r\n}\n\n/**\r\n * If the form is submitting or not\r\n */\r\nfunction useIsSubmitting() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return computed(() => {\r\n        var _a;\r\n        return (_a = form === null || form === void 0 ? void 0 : form.isSubmitting.value) !== null && _a !== void 0 ? _a : false;\r\n    });\r\n}\n\n/**\r\n * Validates a single field\r\n */\r\nfunction useValidateField(path) {\r\n    const form = injectWithSelf(FormContextKey);\r\n    let field = path ? undefined : inject(FieldContextKey);\r\n    return function validateField() {\r\n        if (path) {\r\n            field = normalizeField(form === null || form === void 0 ? void 0 : form.fieldsByPath.value[unref(path)]);\r\n        }\r\n        if (!field) {\r\n            warn(`field with name ${unref(path)} was not found`);\r\n            return Promise.resolve({\r\n                errors: [],\r\n                valid: true,\r\n            });\r\n        }\r\n        return field.validate();\r\n    };\r\n}\n\n/**\r\n * If the form is dirty or not\r\n */\r\nfunction useIsFormDirty() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return computed(() => {\r\n        var _a;\r\n        return (_a = form === null || form === void 0 ? void 0 : form.meta.value.dirty) !== null && _a !== void 0 ? _a : false;\r\n    });\r\n}\n\n/**\r\n * If the form is touched or not\r\n */\r\nfunction useIsFormTouched() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return computed(() => {\r\n        var _a;\r\n        return (_a = form === null || form === void 0 ? void 0 : form.meta.value.touched) !== null && _a !== void 0 ? _a : false;\r\n    });\r\n}\n\n/**\r\n * If the form has been validated and is valid\r\n */\r\nfunction useIsFormValid() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return computed(() => {\r\n        var _a;\r\n        return (_a = form === null || form === void 0 ? void 0 : form.meta.value.valid) !== null && _a !== void 0 ? _a : false;\r\n    });\r\n}\n\n/**\r\n * Validate multiple fields\r\n */\r\nfunction useValidateForm() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return function validateField() {\r\n        if (!form) {\r\n            return Promise.resolve({ results: {}, errors: {}, valid: true });\r\n        }\r\n        return form.validate();\r\n    };\r\n}\n\n/**\r\n * The number of form's submission count\r\n */\r\nfunction useSubmitCount() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return computed(() => {\r\n        var _a;\r\n        return (_a = form === null || form === void 0 ? void 0 : form.submitCount.value) !== null && _a !== void 0 ? _a : 0;\r\n    });\r\n}\n\n/**\r\n * Gives access to a field's current value\r\n */\r\nfunction useFieldValue(path) {\r\n    const form = injectWithSelf(FormContextKey);\r\n    // We don't want to use self injected context as it doesn't make sense\r\n    const field = path ? undefined : inject(FieldContextKey);\r\n    return computed(() => {\r\n        if (path) {\r\n            return getFromPath(form === null || form === void 0 ? void 0 : form.values, unref(path));\r\n        }\r\n        return unref(field === null || field === void 0 ? void 0 : field.value);\r\n    });\r\n}\n\n/**\r\n * Gives access to a form's values\r\n */\r\nfunction useFormValues() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return computed(() => {\r\n        return (form === null || form === void 0 ? void 0 : form.values) || {};\r\n    });\r\n}\n\n/**\r\n * Gives access to all form errors\r\n */\r\nfunction useFormErrors() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return computed(() => {\r\n        return ((form === null || form === void 0 ? void 0 : form.errors.value) || {});\r\n    });\r\n}\n\n/**\r\n * Gives access to a single field error\r\n */\r\nfunction useFieldError(path) {\r\n    const form = injectWithSelf(FormContextKey);\r\n    // We don't want to use self injected context as it doesn't make sense\r\n    const field = path ? undefined : inject(FieldContextKey);\r\n    return computed(() => {\r\n        if (path) {\r\n            return form === null || form === void 0 ? void 0 : form.errors.value[unref(path)];\r\n        }\r\n        return field === null || field === void 0 ? void 0 : field.errorMessage.value;\r\n    });\r\n}\n\nfunction useSubmitForm(cb) {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    const onSubmit = form ? form.handleSubmit(cb) : undefined;\r\n    return function submitForm(e) {\r\n        if (!onSubmit) {\r\n            return;\r\n        }\r\n        return onSubmit(e);\r\n    };\r\n}\n\nexport { ErrorMessage, Field, FieldArray, FieldContextKey, Form, FormContextKey, configure, defineRule, useField, useFieldArray, useFieldError, useFieldValue, useForm, useFormErrors, useFormValues, useIsFieldDirty, useIsFieldTouched, useIsFieldValid, useIsFormDirty, useIsFormTouched, useIsFormValid, useIsSubmitting, useResetForm, useSubmitCount, useSubmitForm, useValidateField, useValidateForm, validate };\n","import { requestWithoutToken } from \"@/utils/request\";\n\n/**\n * 根据账号和密码进行登录\n * @param account 账号\n * @param password 密码\n * @return {Promise}\n */\nexport function loginByAccount({ account, password }) {\n  return requestWithoutToken(\"/login\", \"post\", { account, password });\n}\n\n/**\n * 获取手机验证码\n * @param mobile 手机号\n * @return {Promise}\n */\nexport function getMsgCodeByMobileLogin(mobile) {\n  return requestWithoutToken(\"/login/code\", \"get\", { mobile });\n}\n\n/**\n * 通过手机号进行登录\n * @param mobile 手机号\n * @param code 验证码\n * @return {Promise}\n */\nexport function loginByMobile({ mobile, code }) {\n  return requestWithoutToken(\"/login/code\", \"post\", { mobile, code });\n}\n\n/**\n * 根据 openid 检测小兔仙账号 (三方登录)\n * @param unionId QQ openid\n * @return {Promise}\n */\nexport function findAccountByOpenId({ unionId }) {\n  return requestWithoutToken(\"/login/social\", \"post\", { unionId, source: 1 });\n}\n\n/**\n * 获取手机验证码 (绑定手机号和QQ号)\n * @param mobile 手机号\n * @return {Promise}\n */\nexport function getMsgCodeWhenBindQQ(mobile) {\n  return requestWithoutToken(\"/login/social/code\", \"get\", { mobile });\n}\n\n/**\n * 绑定手机号和QQ号\n * @param mobile 手机号\n * @param code 验证码\n * @param unionId QQ openid\n * @return {Promise}\n */\nexport function bindMobileAndQQ({ mobile, code, unionId }) {\n  return requestWithoutToken(\"/login/social/bind\", \"post\", {\n    mobile,\n    code,\n    unionId,\n  });\n}\n\n/**\n * 检测用户名或者手机号是否唯一\n * @param account 手机号或者用户名\n * @return {Promise}\n */\nexport function checkUsernameIsUnique(account) {\n  return requestWithoutToken(\"/register/check\", \"get\", { account });\n}\n\n/**\n * 获取手机验证码 (完善账号)\n * @param mobile 手机号\n * @return {Promise}\n */\nexport function getMsgCodeByRegister(mobile) {\n  return requestWithoutToken(\"/register/code\", \"get\", { mobile });\n}\n\n/**\n * 注册新账号并绑定手机号\n * @param account 用户名\n * @param mobile 手机号\n * @param code 手机验证码\n * @param password 密码\n * @param unionId QQ用户的openid\n * @return {Promise}\n */\nexport function registerAndBindQQ({\n  account,\n  mobile,\n  code,\n  password,\n  unionId,\n}) {\n  return requestWithoutToken(`/login/social/${unionId}/complement`, \"post\", {\n    account,\n    mobile,\n    code,\n    password,\n  });\n}\n"],"sourceRoot":""}